import{_ as n,c as s,o as a,d as p}from"./app.e2486952.js";var e="/blog/assets/trigger.2f8a36ee.png";const f='{"title":"trigger","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/effect/\u89E6\u53D1\u4F9D\u8D56.md"}',t={},o=p('<h1 id="trigger" tabindex="-1">trigger <a class="header-anchor" href="#trigger" aria-hidden="true">#</a></h1><p>\u5728\u4F9D\u8D56\u88AB\u6536\u96C6\u5B8C\u6210\u540E\uFF0C\u4E00\u65E6\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u67D0\u4E9B\u5C5E\u6027\u6539\u53D8\u540E\uFF0C\u5C31\u9700\u8981\u5C06\u5BF9\u5E94\u7684\u4F9D\u8D56\u8FDB\u884C\u89E6\u53D1\u3002\u8FD9\u4E2A\u89E6\u53D1\u7684\u8FC7\u7A0B\u53D1\u751F\u5728<code>proxy</code>\u7684<code>set</code>\u3001<code>deleteProperty</code>\u62E6\u622A\u5668\u3001\uFF0C\u6216\u96C6\u5408\u7684<code>get</code>\u62E6\u622A\u5668\uFF08\u62E6\u622A<code>clear</code>\u3001<code>add</code>\u3001<code>set</code>\u7B49\u64CD\u4F5C\uFF09</p><p>\u89E6\u53D1\u4F9D\u8D56\uFF08<code>trigger</code>\uFF09\u6D41\u7A0B\uFF1A</p><p><img src="'+e+`" alt=""></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> object<span class="token punctuation">,</span>
  type<span class="token operator">:</span> TriggerOpTypes<span class="token punctuation">,</span>
  key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  newValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  oldValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  oldTarget<span class="token operator">?</span><span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Set<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6target\u5BF9\u76F8\u5E94\u7684\u6240\u6709\u4F9D\u8D56\uFF0C\u4E00\u4E2Amap\u5BF9\u8C61 </span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\uFF0C\u8BF4\u660E\u6CA1\u6709\u4F9D\u8D56\uFF0C\u76F4\u63A5return</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// never been tracked</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6\u9700\u8981\u89E6\u53D1\u7684\u4F9D\u8D56</span>
  <span class="token keyword">let</span> deps<span class="token operator">:</span> <span class="token punctuation">(</span>Dep <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">CLEAR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// collection being cleared</span>
    <span class="token comment">// trigger all effects for target</span>
    deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>depsMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dep<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">||</span> key <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>newValue <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// schedule runs for SET | ADD | DELETE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// also run for iteration key on ADD | DELETE | Map.SET</span>
    <span class="token comment">// \u83B7\u53D6\u4E00\u4E9B\u8FED\u4EE3\u7684\u4F9D\u8D56\uFF0C\u5982map.keys\u3001map.values\u3001map.entries\u7B49</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isMap</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">MAP_KEY_ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// new index added to array -&gt; length changes</span>
          deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isMap</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">MAP_KEY_ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isMap</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> eventInfo <span class="token operator">=</span> __DEV__
    <span class="token operator">?</span> <span class="token punctuation">{</span> target<span class="token punctuation">,</span> type<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> oldTarget <span class="token punctuation">}</span>
    <span class="token operator">:</span> <span class="token keyword">undefined</span>

  <span class="token comment">// \u5F00\u59CB\u89E6\u53D1\u4F9D\u8D56</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">triggerEffects</span><span class="token punctuation">(</span>deps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> eventInfo<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">triggerEffects</span><span class="token punctuation">(</span>deps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> effects<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dep <span class="token keyword">of</span> deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effects<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>dep<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">triggerEffects</span><span class="token punctuation">(</span><span class="token function">createDep</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">,</span> eventInfo<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">triggerEffects</span><span class="token punctuation">(</span><span class="token function">createDep</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">triggerEffects</span><span class="token punctuation">(</span>
  dep<span class="token operator">:</span> Dep <span class="token operator">|</span> ReactiveEffect<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  debuggerEventExtraInfo<span class="token operator">?</span><span class="token operator">:</span> DebuggerEventExtraInfo
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// spread into array for stabilization</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> effect <span class="token keyword">of</span> <span class="token function">isArray</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token operator">?</span> dep <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>dep<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// effect\u4E0D\u7B49\u4E8EactiveEffect \u6216effect\u5141\u8BB8\u9012\u5F52</span>
    <span class="token comment">// \u4E3A\u4EC0\u4E48effect\u4E0D\u7B49\u4E8EactiveEffect\u624D\u80FD\u6267\u884C\uFF1F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effect <span class="token operator">!==</span> activeEffect <span class="token operator">||</span> effect<span class="token punctuation">.</span>allowRecurse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> effect<span class="token punctuation">.</span>onTrigger<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span> effect <span class="token punctuation">}</span><span class="token punctuation">,</span> debuggerEventExtraInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6709scheduler\u6267\u884Cscheduler\uFF0C\u6CA1\u6709\u6267\u884Crun\u65B9\u6CD5</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effect<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div><p>\u5F53\u4FEE\u6539\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5982<code>obj.xxx = xx</code>\u3001<code>map.set(x, x)</code>\u7B49\u53EF\u4EE5\u4FEE\u6539\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u64CD\u4F5C\uFF0C\u4F1A\u88AB<code>proxy</code>\u5BF9\u5E94\u7684\u62E6\u622A\u5668\u6240\u62E6\u622A\uFF0C\u5047\u8BBE\u8FD9\u91CC\u8FDB\u5165<code>set</code>\u62E6\u622A\u5668\u3002\u5728<code>set</code>\u62E6\u622A\u5668\u4E2D\u8FDB\u884C\u89E6\u53D1\u4F9D\u8D56\u7684\u64CD\u4F5C\uFF1A<code>trigger(target, type, key?, newValue?, oldValue?, oldTarget?)</code>\uFF0C<code>trigger</code>\u51FD\u6570\u63A5\u65366\u4E2A\u53C2\u6570\uFF0C\u540E\u56DB\u4E2A\u53C2\u6570\u53EF\u9009\u3002</p><ul><li><code>target</code>\uFF1A\u4EE3\u7406\u7684\u539F\u59CB\u5BF9\u8C61</li><li><code>type</code>\uFF1A\u64CD\u4F5C\u7C7B\u578B\u3002\u662F\u4E2A\u679A\u4E3E\u7C7B<code>TriggerOpTypes</code>\uFF0C\u5171\u6709\u56DB\u79CD\u64CD\u4F5C\u7C7B\u578B\uFF1A <ul><li><code>TriggerOpTypes.SET</code>\uFF1A\u5982<code>obj.xx = xx</code>\uFF08\u4FEE\u6539\u5C5E\u6027\uFF09\u3001<code>map.set(xx, xx)</code>\uFF08\u4FEE\u6539\u64CD\u4F5C\u4E0D\u662F\u65B0\u589E\u64CD\u4F5C\uFF09\u3001<code>arr[index] = xx</code>(<code>index &lt; arr.length</code>)\u3001<code>arr.length = 0</code></li><li><code>TriggerOpTypes.ADD</code>\uFF1A\u5982<code>obj.xx = xx</code>\uFF08\u65B0\u589E\u5C5E\u6027\uFF09\u3001<code>set.add(xx)</code>\u3001<code>map.set(xx, xx)</code>\uFF08\u65B0\u589E\u64CD\u4F5C\uFF09\u3001<code>arr[index] = xx</code>(<code>index &gt;= arr.length</code>)</li><li><code>TriggerOpTypes.DELETE</code>\uFF1A\u5982<code>delete obj.xx</code>\u3001<code>set/map.delete(xx)</code></li><li><code>TriggerOpTypes.CLEAR</code>\uFF1A\u5982<code>map/set.clear()</code></li></ul></li><li><code>key</code>\uFF1A\u64CD\u4F5C\u7684<code>key</code>\uFF0C\u5982<code>obj.foo = 1</code>\uFF0C<code>key</code>\u4E3A<code>foo</code>\u3002</li><li><code>newValue</code>\uFF1A\u65B0\u7684\u503C\uFF0C\u5982<code>obj.foo = 1</code>\uFF0C<code>newValue</code>\u4E3A<code>1</code>\u3002</li><li><code>oldValue</code>\uFF1A\u65E7\u7684\u503C\uFF0C\u5982<code>obj.foo = 1</code>\uFF0C<code>oldValue</code>\u4E3A\u4FEE\u6539\u524D\u7684<code>obj.foo</code>\u3002</li><li><code>oldTarget</code>\uFF1A\u53EA\u5728\u5F00\u53D1\u6A21\u5F0F\u4E0B\u6709\u7528</li></ul><p>\u5728<code>trigger</code>\u4E2D\u9996\u5148\u8981\u83B7\u53D6<code>target</code>\u5BF9\u5E94\u7684\u6240\u6709\u4F9D\u8D56<code>depsMap</code>\uFF0C\u5982\u679C\u6CA1\u6709\u7684\u76F4\u63A5<code>return</code>\u3002\u83B7\u53D6\u5230\u7684<code>depsMap</code>\u5E76\u4E0D\u662F\u6BCF\u4E2A\u4F9D\u8D56\u90FD\u9700\u8981\u89E6\u53D1\uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u5C31\u662F\u9009\u51FA\u9700\u8981\u89E6\u53D1\u7684\u4F9D\u8D56\uFF0C\u90A3\u4E48\u600E\u4E48\u9009\u62E9\u5462\uFF1F\u8FD9\u91CC\u6709\u51E0\u4E2A\u5206\u652F\uFF1A</p><ol><li><code>type === TriggerOpTypes.CLEAR</code>\uFF1A\u610F\u5473\u7740<code>map/set</code>\u88AB\u6E05\u7A7A\uFF0C\u8FD9\u65F6\u6240\u6709\u4F9D\u8D56\u90FD\u9700\u8981\u88AB\u89E6\u53D1\u3002</li><li><code>key === &#39;length&#39; &amp;&amp; isArray(target)</code>\uFF1A\u5F53\u64CD\u4F5C\u7684\u7684\u662F<code>array</code>\u7684<code>length</code>\u5C5E\u6027\uFF0C\u5982<code>arr.length = 1</code>\uFF0C\u8FD9\u65F6\u8981\u83B7\u53D6\u7684\u4F9D\u8D56\u5305\u62EC\uFF1A<code>length</code>\u7684\u4F9D\u8D56\u3001\u7D22\u5F15\u5927\u4E8E\u7B49\u4E8E<code>1</code>\u7684\u4F9D\u8D56\u3002</li><li>\u5176\u4ED6\u60C5\u51B5\uFF1A <ol><li>\u9996\u5148\u4ECE<code>depsMap</code>\u4E2D\u83B7\u53D6\u5BF9\u5E94<code>key</code>\u7684\u4F9D\u8D56\uFF0C<code>depsMap.get(key)</code>\u3002</li><li>\u7136\u540E\u518D\u627E\u4E00\u4E9B\u8FED\u4EE3\u7684\u4F9D\u8D56\uFF0C\u5982<code>keys\u3001values\u3001entries</code>\u64CD\u4F5C\u3002\u600E\u4E48\u627E\u8FD9\u4E9B\u4F9D\u8D56\u5462\uFF1F\uFF0C\u9996\u5148\u6839\u636E<code>type</code>\u5206\u6210\u4E09\u4E2A\u5206\u652F\uFF1A <ul><li><code>TriggerOpTypes.ADD</code>\uFF1A\u5982\u679C\u4E0D\u662F\u6570\u7EC4\uFF0C\u83B7\u53D6<code>ITERATE_KEY</code>\u7684\u4F9D\u8D56\uFF0C\u5982\u679C\u662F<code>Map</code>\u83B7\u53D6<code>MAP_KEY_ITERATE_KEY</code>\u7684\u4F9D\u8D56\uFF1B\u5982\u679C\u662F\u6570\u7EC4\u5E76\u4E14<code>key</code>\u662F\u7D22\u5F15\uFF0C\u83B7\u53D6<code>length</code>\u5BF9\u5E94\u7684\u4F9D\u8D56</li><li><code>TriggerOpTypes.DELETE</code>\uFF1A\u5982\u679C\u4E0D\u662F\u6570\u7EC4\uFF0C\u83B7\u53D6<code>ITERATE_KEY</code>\u7684\u4F9D\u8D56\uFF0C\u5982\u679C\u662F<code>Map</code>\u83B7\u53D6<code>MAP_KEY_ITERATE_KEY</code>\u7684\u4F9D\u8D56</li><li><code>TriggerOpTypes.SET</code>\uFF1A\u5982\u679C\u662F<code>Map</code>\uFF0C\u83B7\u53D6<code>ITERATE_KEY</code>\u7684\u4F9D\u8D56</li></ul></li></ol></li></ol><details class="details custom-block"><summary>\u5F53\u627E\u8FED\u4EE3\u7684\u4F9D\u8D56\u65F6\u4E3A\u4EC0\u4E48key\u662FITERATE_KEY\u6216MAP_KEY_ITERATE_KEY\uFF1F\u4EC0\u4E48\u60C5\u51B5\u4E0B\u83B7\u53D6\u9700\u8981\u83B7\u53D6ITERATE_KEY\uFF1F\u4EC0\u4E48\u60C5\u51B5\u4E0B\u540E\u53BBMAP_KEY_ITERATE_KEY\u7684\u4F9D\u8D56\uFF1F</summary><p>\u8FD9\u4E2A\u95EE\u9898\u8981\u548C\u6536\u96C6\u4F9D\u8D56\u65F6\u5982\u4F55\u5B58\u50A8\u5BF9\u5E94\u7740\u770B\uFF0C\u8FD9\u91CC\u5217\u51FA\u6536\u96C6\u4F9D\u8D56\u65F6\u5BF9\u5E94\u7684\u6E90\u7801\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">size</span><span class="token punctuation">(</span>target<span class="token operator">:</span> IterableCollections<span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5F53\u8C03\u7528map/set.size()\uFF0C\u4F7F\u7528\u7684key\u503C\u662FITERATE_KEY</span>
  <span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token function">toRaw</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;size&#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createForEach</span><span class="token punctuation">(</span>isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> isShallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span>
    <span class="token keyword">this</span><span class="token operator">:</span> IterableCollections<span class="token punctuation">,</span>
    callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span>
    thisArg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u5F53\u4F7F\u7528set/map.forEach()\uFF0C\u4F7F\u7528\u7684key\u662FITERATE_KEY</span>
    <span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token function">track</span><span class="token punctuation">(</span>rawTarget<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createIterableMethod</span><span class="token punctuation">(</span>method<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> isShallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> IterableCollections<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Iterable <span class="token operator">&amp;</span> Iterator <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">const</span> isKeyOnly <span class="token operator">=</span> method <span class="token operator">===</span> <span class="token string">&#39;keys&#39;</span> <span class="token operator">&amp;&amp;</span> targetIsMap
    <span class="token comment">// values/entries/[Symbol.iterator]/\u4F7F\u7528\u7684key\u662FITERATE_KEY\uFF0Cmap.keys\u4F7F\u7528\u7684key\u662FMAP_KEY_ITERATE_KEY</span>
    <span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span>
    <span class="token function">track</span><span class="token punctuation">(</span>
      rawTarget<span class="token punctuation">,</span>
      TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span>
      isKeyOnly <span class="token operator">?</span> <span class="token constant">MAP_KEY_ITERATE_KEY</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span>
    <span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// Object.keys()/Object.getOwnPropertyNames()/Object.getOwnPropertySymbols()/for...in\u4F7F\u7528ITERATE_KEY\u524D\u63D0\u662Ftarget\u4E0D\u662F\u6570\u7EC4</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>\u7EFC\u4E0A\u53EF\u4EE5\u770B\u51FA\uFF1A</p><ul><li>\u4F7F\u7528<code>ITERATE_KEY</code>\u5B58\u50A8\u4F9D\u8D56\u7684\u60C5\u51B5\u6709\u8FD9\u4E48\u51E0\u79CD\uFF1A\u83B7\u53D6\u96C6\u5408\u7684<code>size</code>\u3001\u96C6\u5408\u7684<code>forEach</code>\u64CD\u4F5C\u3001\u96C6\u5408\u7684\u8FED\u4EE3\u64CD\u4F5C\uFF08\u5305\u62EC<code>keys</code>\uFF08\u975EMap\uFF09\u3001<code>values</code>\u3001<code>entries</code>\u3001<code>Symbol.iterator</code>\uFF08<code>for...of</code>\uFF09\uFF09</li><li>\u4F7F\u7528<code>MAP_KEY_ITERATE_KEY</code>\u5B58\u50A8\u4F9D\u8D56\u7684\u60C5\u51B5\u53EA\u6709\u4E00\u79CD\uFF1A<code>map.keys()</code></li></ul><p>\u5982\u679C\u5BF9\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u6539\u52A8\u662F\u4E00\u79CD\u65B0\u589E\u64CD\u4F5C\u7684\u8BDD\uFF0C\u53D7\u5F71\u54CD\u7684\u64CD\u4F5C\u6709\uFF1A\u96C6\u5408\u7684<code>size</code>\u3001\u96C6\u5408\u7684<code>forEach</code>\u3001\u96C6\u5408\u7684\u8FED\u4EE3\u64CD\u4F5C\u3002 \u5982\u679C\u6539\u52A8\u65F6\u5220\u9664\u64CD\u4F5C\uFF0C\u53D7\u5F71\u54CD\u7684\u64CD\u4F5C\u6709\uFF1A\u96C6\u5408\u7684<code>size</code>\u3001\u96C6\u5408\u7684<code>forEach</code>\u3001\u96C6\u5408\u7684\u8FED\u4EE3\u64CD\u4F5C\u3002 \u5982\u679C\u6539\u52A8\u4FEE\u6539\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u53EA\u6709<code>map.set()</code>\u53EF\u4EE5\u5B9E\u73B0\u4FEE\u6539\u96C6\u5408\u7684\u64CD\u4F5C\uFF0C\u6240\u4EE5\u53D7\u5F71\u54CD\u7684\u64CD\u4F5C\u53EA\u6709<code>Map</code>\u7684\u8FED\u4EE3\u64CD\u4F5C\u548C<code>forEach</code></p></details><p>\u83B7\u53D6\u5B8C\u9700\u8981\u6267\u884C\u7684\u4F9D\u8D56\u540E\uFF0C\u63A5\u4E0B\u6765\u5C31\u662F\u6267\u884C\u4F9D\u8D56\uFF0C\u8C03\u7528<code>triggerEffects()</code>\uFF0C\u904D\u5386\u4E0A\u8FF0\u8FC7\u7A0B\u4E2D\u6536\u96C6\u7684<code>deps</code>\uFF0C\u904D\u5386\u6267\u884C\u3002\u904D\u5386\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C<code>effect</code>\u4E2D\u6709<code>scheduler</code>\u8C03\u5EA6\u5668\uFF0C\u6267\u884C\u8C03\u5EA6\u5668\uFF0C\u6CA1\u6709\u8C03\u5EA6\u5668\u6267\u884C<code>run</code>\u65B9\u6CD5\u3002</p>`,11),c=[o];function l(u,r,i,k,d,b){return a(),s("div",null,c)}var g=n(t,[["render",l]]);export{f as __pageData,g as default};
