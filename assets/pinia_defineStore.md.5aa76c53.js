import{_ as n,c as s,o as a,d as p}from"./app.82b5348e.js";const m='{"title":"defineStore","description":"","frontmatter":{},"headers":[{"level":2,"title":"useStore","slug":"usestore"},{"level":2,"title":"createSetupStore","slug":"createsetupstore"},{"level":3,"title":"$onAction","slug":"onaction"},{"level":3,"title":"$patch","slug":"patch"},{"level":3,"title":"$reset","slug":"reset"},{"level":3,"title":"$subscribe","slug":"subscribe"},{"level":3,"title":"$dispose","slug":"dispose"},{"level":2,"title":"createOptionsStore","slug":"createoptionsstore"}],"relativePath":"pinia/defineStore.md"}',t={},e=p(`<h1 id="definestore" tabindex="-1">defineStore <a class="header-anchor" href="#definestore" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u901A\u8FC7<code>defineStore</code>\u5B9A\u4E49\u4E00\u4E2A<code>store</code>\u3002</p><p>\u6E90\u7801\u4F4D\u7F6E\uFF1A<code>packages/pinia/src/store.ts</code></p></div><p><code>defineStore</code>\u51FD\u6570\u53EF\u4EE5\u63A5\u6536\u4E09\u4E2A\u53C2\u6570\uFF1A<code>idOrOptions</code>\u3001<code>setup</code>\u3001<code>setOptions</code>\uFF0C\u540E\u4E24\u4E2A\u53C2\u6570\u4E3A\u53EF\u9009\u53C2\u6570\u3002\u4E0B\u9762\u662F\u4E09\u4E2A<code>defineStore</code>\u7684\u51FD\u6570\u7C7B\u578B\u5B9A\u4E49\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineStore</span><span class="token generic class-name"><span class="token operator">&lt;</span>
  Id <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token constant">S</span> <span class="token keyword">extends</span> StateTree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">G</span> <span class="token keyword">extends</span> _GettersTree<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">A</span> <span class="token comment">/* extends ActionsTree */</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  id<span class="token operator">:</span> Id<span class="token punctuation">,</span>
  options<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>DefineStoreOptions<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> StoreDefinition<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineStore</span><span class="token generic class-name"><span class="token operator">&lt;</span>
  Id <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token constant">S</span> <span class="token keyword">extends</span> StateTree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">G</span> <span class="token keyword">extends</span> _GettersTree<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">A</span> <span class="token comment">/* extends ActionsTree */</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token operator">:</span> DefineStoreOptions<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> StoreDefinition<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineStore</span><span class="token generic class-name"><span class="token operator">&lt;</span>Id <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">SS</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  id<span class="token operator">:</span> Id<span class="token punctuation">,</span>
  <span class="token function-variable function">storeSetup</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">SS</span><span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> DefineSetupStoreOptions<span class="token operator">&lt;</span>
    Id<span class="token punctuation">,</span>
    _ExtractStateFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    _ExtractGettersFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    _ExtractActionsFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span>
    <span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> StoreDefinition<span class="token operator">&lt;</span>
  Id<span class="token punctuation">,</span>
  _ExtractStateFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  _ExtractGettersFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  _ExtractActionsFromSetupStore<span class="token operator">&lt;</span><span class="token constant">SS</span><span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u63A5\u4E0B\u6765\u770B<code>defineStore</code>\u7684\u5B9E\u73B0\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineStore</span><span class="token punctuation">(</span>
  idOrOptions<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
  setup<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
  setupOptions<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">)</span><span class="token operator">:</span> StoreDefinition <span class="token punctuation">{</span>
  <span class="token keyword">let</span> id<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token keyword">let</span> options<span class="token operator">:</span>
    <span class="token operator">|</span> DefineStoreOptions<span class="token operator">&lt;</span>
    <span class="token builtin">string</span><span class="token punctuation">,</span>
    StateTree<span class="token punctuation">,</span>
    _GettersTree<span class="token operator">&lt;</span>StateTree<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    _ActionsTree
    <span class="token operator">&gt;</span>
    <span class="token operator">|</span> DefineSetupStoreOptions<span class="token operator">&lt;</span>
    <span class="token builtin">string</span><span class="token punctuation">,</span>
    StateTree<span class="token punctuation">,</span>
    _GettersTree<span class="token operator">&lt;</span>StateTree<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    _ActionsTree
    <span class="token operator">&gt;</span>

  <span class="token keyword">const</span> isSetupStore <span class="token operator">=</span> <span class="token keyword">typeof</span> setup <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> idOrOptions <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    id <span class="token operator">=</span> idOrOptions
    <span class="token comment">// \u5982\u679Csetup\u662F\u51FD\u6570\uFF0C\u90A3\u4E48options\u662FsetupOptions\uFF0C\u5426\u5728\u4E3Asetup</span>
    options <span class="token operator">=</span> isSetupStore <span class="token operator">?</span> setupOptions <span class="token operator">:</span> setup
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> idOrOptions
    id <span class="token operator">=</span> idOrOptions<span class="token punctuation">.</span>id
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">useSttore</span><span class="token punctuation">(</span>pinia<span class="token punctuation">,</span> hot<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//... }</span>
  
  useStore<span class="token punctuation">.</span>$id <span class="token operator">=</span> id
  
  <span class="token keyword">return</span> useStore
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>\u9996\u5148\u5728<code>defineStore</code>\u4E2D\u58F0\u660E\u4E86\u4E09\u4E2A\u53D8\u91CF\uFF1A<code>id</code>\u3001<code>options</code>\u3001<code>isSetupStore</code>\uFF0C\u5176\u4E2D<code>id</code>\u4E3A\u5B9A\u4E49\u7684<code>store</code>\u7684\u552F\u4E00<code>id</code>\uFF0C<code>options</code>\u4E3A\u5B9A\u4E49<code>store</code>\u65F6\u7684<code>options</code>\uFF0C<code>isSetupStore</code>\u4EE3\u8868\u4F20\u5165\u7684<code>setup</code>\u662F\u4E0D\u662F\u4E2A\u51FD\u6570\u3002</p><p>\u7136\u540E\u6839\u636E\u4F20\u5165\u7684<code>idOrOptions</code>\u7684\u7C7B\u578B\uFF0C\u4E3A<code>id</code>\u3001<code>otions</code>\u8D4B\u503C\u3002\u7D27\u63A5\u7740\u58F0\u660E\u4E86\u4E00\u4E2A<code>useStore</code>\u51FD\u6570\uFF0C\u5E76\u5C06<code>id</code>\u8D4B\u7ED9\u5B83\uFF0C\u7136\u540E\u5C06\u5176<code>return</code>\u3002\u622A\u6B62\u5230\u6B64\uFF0C\u6211\u4EEC\u77E5\u9053<code>defineStore</code>\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u51FD\u6570\u5177\u4F53\u662F\u505A\u4EC0\u4E48\u7684\u5462\uFF1F\u6211\u4EEC\u7EE7\u7EED\u770B<code>useStore</code>\u7684\u5B9E\u73B0\u3002</p><h2 id="usestore" tabindex="-1"><code>useStore</code> <a class="header-anchor" href="#usestore" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">useStore</span><span class="token punctuation">(</span>pinia<span class="token operator">?</span><span class="token operator">:</span> Pinia <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hot<span class="token operator">?</span><span class="token operator">:</span> StoreGeneric<span class="token punctuation">)</span><span class="token operator">:</span> StoreGeneric <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5B9E\u4F8B</span>
  <span class="token keyword">const</span> currentInstance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5\u73AF\u5883\u4E0B\uFF0C\u5FFD\u7565\u63D0\u4F9B\u7684\u53C2\u6570\uFF0C\u56E0\u4E3A\u603B\u662F\u80FD\u4F7F\u7528getActivePinia()\u83B7\u53D6pinia\u5B9E\u4F8B</span>
  <span class="token comment">// \u975E\u6D4B\u8BD5\u73AF\u5883\u4E0B\uFF0C\u5982\u679C\u672A\u4F20\u5165pinia\uFF0C\u5219\u4F1A\u4ECE\u7EC4\u4EF6\u4E2D\u4F7F\u7528inject\u83B7\u53D6pinia</span>
  pinia <span class="token operator">=</span>
    <span class="token punctuation">(</span>__TEST__ <span class="token operator">&amp;&amp;</span> activePinia <span class="token operator">&amp;&amp;</span> activePinia<span class="token punctuation">.</span>_testing <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> pinia<span class="token punctuation">)</span> <span class="token operator">||</span>
    <span class="token punctuation">(</span>currentInstance <span class="token operator">&amp;&amp;</span> <span class="token function">inject</span><span class="token punctuation">(</span>piniaSymbol<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8BBE\u7F6E\u6FC0\u6D3B\u7684pinia</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pinia<span class="token punctuation">)</span> <span class="token function">setActivePinia</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>

  <span class="token comment">// \u5982\u679C\u6CA1\u6709activePinia\uFF0C\u90A3\u4E48\u53EF\u80FD\u6CA1\u6709install pinia\uFF0C\u5F00\u53D1\u73AF\u5883\u4E0B\u8FDB\u884C\u63D0\u793A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>activePinia<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[\u{1F34D}]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\tconst pinia = createPinia()\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\tapp.use(pinia)\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">This will fail in production.</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BBE\u7F6Epinia\u4E3A\u6FC0\u6D3B\u7684pinia</span>
  pinia <span class="token operator">=</span> activePinia<span class="token operator">!</span>

  <span class="token comment">// \u4ECEpina._s\u4E2D\u67E5\u627Eid\u5426\u6CE8\u518C\u8FC7\uFF0C\u5982\u679C\u6CA1\u6709\u88AB\u6CE8\u518C\uFF0C\u521B\u5EFA\u4E00\u4E2Astore\u5E76\u6CE8\u518C\u5728pinia._s\u4E2D</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSetupStore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">createSetupStore</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> setup<span class="token punctuation">,</span> options<span class="token punctuation">,</span> pinia<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">createOptionsStore</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> options <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pinia<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      useStore<span class="token punctuation">.</span>_pinia <span class="token operator">=</span> pinia
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4ECEpinia._s\u4E2D\u83B7\u53D6id\u5BF9\u5E94\u7684store</span>
  <span class="token keyword">const</span> store<span class="token operator">:</span> StoreGeneric <span class="token operator">=</span> pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token operator">!</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hotId <span class="token operator">=</span> <span class="token string">&#39;__hot:&#39;</span> <span class="token operator">+</span> id
    <span class="token keyword">const</span> newStore <span class="token operator">=</span> isSetupStore
      <span class="token operator">?</span> <span class="token function">createSetupStore</span><span class="token punctuation">(</span>hotId<span class="token punctuation">,</span> setup<span class="token punctuation">,</span> options<span class="token punctuation">,</span> pinia<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">createOptionsStore</span><span class="token punctuation">(</span>hotId<span class="token punctuation">,</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pinia<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

    hot<span class="token punctuation">.</span><span class="token function">_hotUpdate</span><span class="token punctuation">(</span>newStore<span class="token punctuation">)</span>

    <span class="token comment">// cleanup the state properties and the store from the cache</span>
    <span class="token keyword">delete</span> pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>hotId<span class="token punctuation">]</span>
    pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>hotId<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    __DEV__ <span class="token operator">&amp;&amp;</span>
    <span class="token constant">IS_CLIENT</span> <span class="token operator">&amp;&amp;</span>
    currentInstance <span class="token operator">&amp;&amp;</span>
    currentInstance<span class="token punctuation">.</span>proxy <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>hot
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vm <span class="token operator">=</span> currentInstance<span class="token punctuation">.</span>proxy
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token string">&#39;_pStores&#39;</span> <span class="token keyword">in</span> vm <span class="token operator">?</span> vm<span class="token punctuation">.</span>_pStores<span class="token operator">!</span> <span class="token operator">:</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_pStores <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    cache<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> store
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD4\u56DEstore</span>
  <span class="token keyword">return</span> store <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><p><code>useStore</code>\u63A5\u6536\u4E24\u4E2A\u53EF\u9009\u53C2\u6570\uFF1A<code>pinia</code>\u3001<code>hot</code>\u3002<code>pinia</code>\u662F\u4E2A<code>Pinia</code>\u7684\u5B9E\u4F8B\uFF0C\u800C<code>hot</code>\u53EA\u5728\u5F00\u53D1\u73AF\u5883\u4E0B\u6709\u7528\uFF0C\u5B83\u4E0E\u6A21\u5757\u7684\u70ED\u66F4\u65B0\u6709\u5173\u3002</p><p>\u5728<code>useStore</code>\u4E2D\u4F1A\u9996\u5148\u83B7\u53D6\u5F53\u524D\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u5982\u679C\u5B58\u5728\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u4F7F\u7528<code>inject(piniaSymbol)</code>\u83B7\u53D6<code>pinia</code>\uFF08\u5728<code>install</code>\u4E2D\u4F1A\u8FDB\u884C<code>provide</code>\uFF09\uFF0C\u5E76\u5C06\u5176\u8BBE\u7F6E\u4E3A<code>activePinia</code>\uFF0C\u7136\u540E\u5728<code>activePinia._s</code>\u4E2D\u67E5\u627E\u662F\u5426\u6709\u88AB\u6CE8\u518C\u4E3A<code>id</code>\u7684<code>store</code>\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u521B\u5EFA<code>store</code>\uFF0C\u5C06\u5176\u6CE8\u518C\u5230<code>activePinia._s</code>\u4E2D\u3002\u6700\u540E\u8FD4\u56DE<code>activePinia._s</code>\u4E2D<code>id</code>\u5BF9\u5E94\u7684<code>store</code>\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u77E5\u9053<code>useStore</code>\u51FD\u6570\uFF0C\u6700\u7EC8\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>store</code>\u3002\u90A3\u4E48\u8FD9\u4E2A<code>store</code>\u662F\u4EC0\u4E48\u5462\uFF1F\u5B83\u662F\u5982\u4F55\u521B\u5EFA\u7684\u5462\uFF1F\u5728<code>useStore</code>\u4E2D\u6839\u636E\u4E0D\u540C\u60C5\u51B5\u4E2D\u6709\u4E24\u4E2D\u65B9\u5F0F\u6765\u521B\u5EFA<code>store</code>\uFF0C\u5206\u522B\u662F\uFF1A<code>createSetupStore</code>\u3001<code>createOptionsStore</code>\u3002\u8FD9\u4E24\u4E2A\u65B9\u5F0F\u7684\u4F7F\u7528\u6761\u4EF6\u662F\uFF1A\u5982\u679C<code>defineStore</code>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E2A<code>function</code>\u8C03\u7528<code>createSetupStore</code>\uFF0C\u76F8\u53CD\u8C03\u7528<code>createOptionsStore</code>\u3002</p><h2 id="createsetupstore" tabindex="-1"><code>createSetupStore</code> <a class="header-anchor" href="#createsetupstore" aria-hidden="true">#</a></h2><p><code>createSetupStore</code>\u53EF\u63A5\u6536\u53C2\u6570\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th></th></tr></thead><tbody><tr><td><code>$id</code></td><td>\u5B9A\u4E49<code>store</code>\u7684<code>id</code></td><td></td></tr><tr><td><code>setup</code></td><td>\u4E00\u4E2A\u53EF\u4EE5\u8FD4\u56DE<code>state</code>\u7684\u51FD\u6570</td><td></td></tr><tr><td><code>options</code></td><td><code>defineStore</code>\u7684<code>options</code></td><td></td></tr><tr><td><code>pinia</code></td><td><code>Pinia</code>\u5B9E\u4F8B</td><td></td></tr><tr><td><code>hot</code></td><td>\u662F\u5426\u542F\u7528\u70ED\u66F4\u65B0</td><td>\u53EF\u9009</td></tr><tr><td><code>isOptionsStore</code></td><td>\u662F\u5426\u4F7F\u7528<code>options</code>\u58F0\u660E\u7684<code>store</code></td><td>\u53EF\u9009</td></tr></tbody></table><p><code>createSetupStore</code>\u4EE3\u7801\u6709500\u591A\u884C\uFF0C\u5982\u679C\u4ECE\u5934\u5F00\u59CB\u770B\u7684\u8BDD\uFF0C\u4E0D\u5BB9\u6613\u7406\u89E3\u3002\u6211\u4EEC\u53EF\u4EE5\u6839\u636E<code>createSetupStore</code>\u7684\u7528\u9014\uFF0C\u4ECE\u5176\u6838\u5FC3\u5F00\u59CB\u770B\u3002\u56E0\u4E3A<code>createSetupStore</code>\u662F\u9700\u8981\u521B\u5EFA<code>store</code>\uFF0C\u5E76\u5C06<code>store</code>\u6CE8\u518C\u5230<code>pinia._s</code>\u4E2D\uFF0C\u6240\u4EE5<code>createSetupStore</code>\u4E2D\u53EF\u80FD\u9700\u8981\u521B\u5EFA<code>store</code>\uFF0C\u6211\u4EEC\u627E\u5230\u521B\u5EFA<code>store</code>\u7684\u5730\u65B9\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> partialStore <span class="token operator">=</span> <span class="token punctuation">{</span>
  _p<span class="token operator">:</span> pinia<span class="token punctuation">,</span>
  <span class="token comment">// _s: scope,</span>
  $id<span class="token punctuation">,</span>
  $onAction<span class="token operator">:</span> <span class="token function">addSubscription</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> actionSubscriptions<span class="token punctuation">)</span><span class="token punctuation">,</span>
  $patch<span class="token punctuation">,</span>
  $reset<span class="token punctuation">,</span>
  <span class="token function">$subscribe</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> removeSubscription <span class="token operator">=</span> <span class="token function">addSubscription</span><span class="token punctuation">(</span>
      subscriptions<span class="token punctuation">,</span>
      callback<span class="token punctuation">,</span>
      options<span class="token punctuation">.</span>detached<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">stopWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">const</span> stopWatcher <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token function">watch</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span> <span class="token keyword">as</span> UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>flush <span class="token operator">===</span> <span class="token string">&#39;sync&#39;</span> <span class="token operator">?</span> isSyncListening <span class="token operator">:</span> isListening<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">(</span>
              <span class="token punctuation">{</span>
                storeId<span class="token operator">:</span> $id<span class="token punctuation">,</span>
                type<span class="token operator">:</span> MutationType<span class="token punctuation">.</span>direct<span class="token punctuation">,</span>
                events<span class="token operator">:</span> debuggerEvents <span class="token keyword">as</span> DebuggerEvent<span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              state
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> $subscribeOptions<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token operator">!</span>

    <span class="token keyword">return</span> removeSubscription
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  $dispose<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> _StoreWithState<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  partialStore<span class="token punctuation">.</span>_r <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store<span class="token operator">:</span> Store<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>
  <span class="token function">assign</span><span class="token punctuation">(</span>
    __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token constant">IS_CLIENT</span>
      <span class="token operator">?</span> <span class="token comment">// devtools custom properties</span>
        <span class="token punctuation">{</span>
          _customProperties<span class="token operator">:</span> <span class="token function">markRaw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          _hmrPayload<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    partialStore
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> Store<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span>

pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>$id<span class="token punctuation">,</span> store<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230<code>store</code>\u662F\u7528<code>reactive</code>\u5305\u88C5\u7684\u4E00\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C<code>reactive</code>\u6240\u5305\u88C5\u7684\u5BF9\u8C61\u662F\u7531<code>partialStore</code>\u901A\u8FC7<code>Object.assign</code>\u8FDB\u884C\u590D\u5236\u7684\u3002<code>partialStore</code>\u4E2D\u5B9A\u4E49\u4E86\u5F88\u591A\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u662F\u66B4\u9732\u7ED9\u7528\u6237\u64CD\u4F5C<code>store</code>\u7684\u4E00\u4E9B\u63A5\u53E3\uFF0C\u5982<code>$onAction</code>\u53EF\u8BBE\u7F6E<code>actions</code>\u7684\u56DE\u8C03\u3001<code>$patch</code>\u53EF\u66F4\u65B0<code>store</code>\u4E2D\u7684<code>state</code>\u3001<code>$dispose</code>\u53EF\u9500\u6BC1<code>store</code>\u3002</p><p>\u5728\u8C03\u7528\u5B8C<code>pinia._s.set($id, store)</code>\u4E4B\u540E\uFF0C\u4F1A\u6267\u884C<code>setup</code>\uFF0C\u83B7\u53D6\u6240\u6709\u7684\u6570\u636E\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> setupStore <span class="token operator">=</span> pinia<span class="token punctuation">.</span>_e<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  scope <span class="token operator">=</span> <span class="token function">effectScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> scope<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">!</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7136\u540E\u904D\u5386<code>setupStore</code>\u7684\u5C5E\u6027\uFF1A\u5982\u679C<code>prop</code>\uFF08<code>key</code>\u5BF9\u5E94\u7684\u503C\uFF09\u4E3A<code>ref</code>\uFF08\u4E0D\u4E3A<code>computed</code>\uFF09\u6216<code>reactive</code>\uFF0C\u5219\u5C06<code>key</code>\u53CA<code>prop</code>\u540C\u6B65\u5230<code>pina.state.value[$id]</code>\u4E2D\uFF1B\u5982\u679C<code>prop</code>\u4E3A<code>function</code>\uFF0C\u5219\u4F1A\u4F7F\u7528<code>wrapAction</code>\u5305\u88C5<code>prop</code>\uFF0C\u5E76\u5C06\u5305\u88C5\u540E\u7684\u65B9\u6CD5\u8D4B\u503C\u7ED9<code>setupStore[key]</code>\uFF0C\u4EE5\u8986\u76D6\u4E4B\u524D\u7684\u503C\uFF0C\u540C\u65F6\u5C06\u5305\u88C5\u540E\u7684\u65B9\u6CD5\u5B58\u5165<code>optionsForPlugin.actions</code>\u4E2D\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> setupStore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prop <span class="token operator">=</span> setupStore<span class="token punctuation">[</span>key<span class="token punctuation">]</span>

  <span class="token comment">// \u5982\u679Cprop\u662Fref\uFF08\u4F46\u4E0D\u662Fcomputed\uFF09\u6216reactive</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isComputed</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isReactive</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">set</span><span class="token punctuation">(</span>hotState<span class="token punctuation">.</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token function">toRef</span><span class="token punctuation">(</span>setupStore <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isOptionsStore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>initialState <span class="token operator">&amp;&amp;</span> <span class="token function">shouldHydrate</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          prop<span class="token punctuation">.</span>value <span class="token operator">=</span> initialState<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">mergeReactiveObjects</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> initialState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u5C06\u5BF9\u5E94\u5C5E\u6027\u540C\u6B65\u81F3pinia.state\u4E2D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">set</span><span class="token punctuation">(</span>pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> prop<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> prop
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _hmrPayload<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> prop <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679Cprop\u662Ffunction</span>
    <span class="token comment">// \u4F7F\u7528wrapAction\u5305\u88C5prop\uFF0C\u5728wrapAction\u4F1A\u5904\u7406afeterCallback\u3001errorCallback</span>
    <span class="token keyword">const</span> actionValue <span class="token operator">=</span> __DEV__ <span class="token operator">&amp;&amp;</span> hot <span class="token operator">?</span> prop <span class="token operator">:</span> <span class="token function">wrapAction</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> prop<span class="token punctuation">)</span>

    <span class="token comment">// \u5C06actionsValue\u6DFB\u52A0\u5230setupStore\u4E2D\uFF0C\u8986\u76D6\u539F\u6765\u7684function</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">set</span><span class="token punctuation">(</span>setupStore<span class="token punctuation">,</span> key<span class="token punctuation">,</span> actionValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      setupStore<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> actionValue
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _hmrPayload<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> prop
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C06function\u7C7B\u578B\u7684prop\u5B58\u5165optionsForPlugin.actions\u4E2D</span>
    optionsForPlugin<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> prop
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isComputed</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _hmrPayload<span class="token punctuation">.</span>getters<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> isOptionsStore
        <span class="token operator">?</span> <span class="token comment">// @ts-expect-error</span>
        options<span class="token punctuation">.</span>getters<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token operator">:</span> prop
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">IS_CLIENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> getters<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>
          setupStore<span class="token punctuation">.</span>_getters <span class="token operator">||</span> <span class="token punctuation">(</span>setupStore<span class="token punctuation">.</span>_getters <span class="token operator">=</span> <span class="token function">markRaw</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        getters<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E0B<code>wrapAction</code>\u662F\u5982\u4F55\u8FDB\u884C\u5305\u88C5<code>function</code>\u7C7B\u578B\u4E0A\u7684<code>prop</code>\u3002</p><p><code>wrapAction</code>\u9996\u5148\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u5728\u8FD9\u4E2A\u51FD\u6570\u4E2D\uFF0C\u9996\u5148\u89E6\u53D1<code>actionSubscriptions</code>\u4E2D\u7684\u51FD\u6570\uFF0C\u7136\u540E\u6267\u884C<code>action</code>\u51FD\u6570\uFF0C\u5982\u679C\u6267\u884C\u8FC7\u7A0B\u4E2D\u51FA\u9519\uFF0C\u4F1A\u6267\u884C<code>onErrorCallbackList</code>\u4E2D\u7684<code>errorCallback</code>\uFF0C\u5982\u679C\u6CA1\u6709\u51FA\u9519\u7684\u8BDD\uFF0C\u6267\u884C<code>afterCallbackList</code>\u4E2D\u7684<code>afterCallback</code>\uFF0C\u6700\u540E\u5C06<code>action</code>\u7684\u8FD4\u56DE\u7ED3\u679C<code>return</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">wrapAction</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> action<span class="token operator">:</span> _Method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setActivePinia</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>
    <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>

    <span class="token keyword">const</span> afterCallbackList<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>resolvedReturn<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> onErrorCallbackList<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">function</span> <span class="token function">after</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> _ArrayType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> afterCallbackList<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      afterCallbackList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> _ArrayType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> onErrorCallbackList<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      onErrorCallbackList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>actionSubscriptions<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      args<span class="token punctuation">,</span>
      name<span class="token punctuation">,</span>
      store<span class="token punctuation">,</span>
      after<span class="token punctuation">,</span>
      onError<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">let</span> ret<span class="token operator">:</span> <span class="token builtin">any</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      ret <span class="token operator">=</span> <span class="token function">action</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$id <span class="token operator">===</span> $id <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> store<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>onErrorCallbackList<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
      <span class="token keyword">throw</span> error
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C\u7ED3\u679C\u662Fpromise\uFF0C\u5728promise\u4E2D\u89E6\u53D1afterCallbackList\u53CAonErrorCallbackList</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> ret
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>afterCallbackList<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
          <span class="token keyword">return</span> value
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>onErrorCallbackList<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
          <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>afterCallbackList<span class="token punctuation">,</span> ret<span class="token punctuation">)</span>
    <span class="token keyword">return</span> ret
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p><code>wrapAction</code>\u4E2D\u7684<code>actionSubscriptions</code>\u662F\u4E2A\u4EC0\u4E48\u5462\uFF1F</p><p>\u5176\u5B9E<code>actionSubscriptions</code>\u4E2D\u7684<code>callback</code>\u5C31\u662F\u662F\u901A\u8FC7<code>store.$onAction</code>\u6DFB\u52A0\u7684\u56DE\u8C03\u51FD\u6570\uFF1B\u5728\u6267\u884C<code>actionSubscriptions</code>\u4E2D\u7684<code>callback</code>\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u5C06\u5BF9\u5E94<code>callback</code>\u6DFB\u52A0\u5230<code>afterCallbackList</code>\u6216<code>onErrorCallbackList</code>\u4E2D\u3002\u4F8B\u5982\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code>store<span class="token punctuation">.</span><span class="token function">$onAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> after<span class="token punctuation">,</span> onError<span class="token punctuation">,</span> name<span class="token punctuation">,</span> store <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u904D\u5386\u5B8C<code>setupStore</code>\u4E4B\u540E\uFF0C\u4F1A\u5C06<code>setupStore</code>\u5408\u5E76\u81F3<code>store</code>\u548C<code>store</code>\u7684\u539F\u59CB\u5BF9\u5BF9\u8C61\u4E2D\uFF0C\u4EE5\u65B9\u4FBF\u4F7F\u7528<code>storeToRefs()</code>\u68C0\u7D22\u54CD\u5E94\u5F0F\u5BF9\u8C61\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>setupStore<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">set</span><span class="token punctuation">(</span>
      store<span class="token punctuation">,</span>
      key<span class="token punctuation">,</span>
      setupStore<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">assign</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> setupStore<span class="token punctuation">)</span>
  <span class="token function">assign</span><span class="token punctuation">(</span><span class="token function">toRaw</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">,</span> setupStore<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7D27\u63A5\u7740\u62E6\u622A<code>store.$state</code>\u7684<code>get</code>\u3001<code>set</code>\u65B9\u6CD5\uFF1A\u5F53\u8C03\u7528<code>store.$state</code>\u65F6\uFF0C\u80FD\u591F\u4ECE<code>pinia.state.value</code>\u627E\u5230\u5BF9\u5E94\u7684<code>state</code>\uFF1B\u5F53\u4F7F\u7528<code>store.$state = xxx</code>\u53BB\u4FEE\u6539\u503C\u65F6\uFF0C\u5219\u8C03\u7528<code>$patch</code>\u65B9\u6CD5\u4FEE\u6539\u503C\u3002</p><div class="language-ts line-numbers-mode"><pre><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> <span class="token string">&#39;$state&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> hot <span class="token operator">?</span> hotState<span class="token punctuation">.</span>value <span class="token operator">:</span> pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;cannot set hotState&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>$state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">assign</span><span class="token punctuation">(</span>$state<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u622A\u6B62\u5230\u6B64\uFF0C<code>store</code>\u5C31\u51C6\u5907\u5B8C\u6BD5\u3002\u5982\u679C\u5728<code>Vue2</code>\u73AF\u5883\u4E0B\uFF0C\u4F1A\u5C06<code>store._r</code>\u8BBE\u7F6E\u4E3Atrue\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  store<span class="token punctuation">.</span>_r <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u63A5\u4E0B\u6765\u5C31\u9700\u8981\u8C03\u7528\u4F7F\u7528<code>use</code>\u65B9\u6CD5\u6CE8\u518C\u7684<code>plugins</code>\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code>pinia<span class="token punctuation">.</span>_p<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>extender<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> <span class="token constant">IS_CLIENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> extensions <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token function">extender</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        store<span class="token punctuation">,</span>
        app<span class="token operator">:</span> pinia<span class="token punctuation">.</span>_a<span class="token punctuation">,</span>
        pinia<span class="token punctuation">,</span>
        options<span class="token operator">:</span> optionsForPlugin<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token operator">!</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>extensions <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      store<span class="token punctuation">.</span>_customProperties<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token function">assign</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> extensions<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06plugin\u7684\u7ED3\u679C\u5408\u5E76\u5230store\u4E2D</span>
    <span class="token function">assign</span><span class="token punctuation">(</span>
      store<span class="token punctuation">,</span>
      scope<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token function">extender</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          store<span class="token punctuation">,</span>
          app<span class="token operator">:</span> pinia<span class="token punctuation">.</span>_a<span class="token punctuation">,</span>
          pinia<span class="token punctuation">,</span>
          options<span class="token operator">:</span> optionsForPlugin<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token operator">!</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u6700\u540E\u8FD4\u56DE<code>store</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>
  initialState <span class="token operator">&amp;&amp;</span>
  isOptionsStore <span class="token operator">&amp;&amp;</span>
  <span class="token punctuation">(</span>options <span class="token keyword">as</span> DefineStoreOptions<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hydrate
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">;</span><span class="token punctuation">(</span>options <span class="token keyword">as</span> DefineStoreOptions<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hydrate<span class="token operator">!</span><span class="token punctuation">(</span>
    store<span class="token punctuation">.</span>$state<span class="token punctuation">,</span>
    initialState
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

isListening <span class="token operator">=</span> <span class="token boolean">true</span>
isSyncListening <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">return</span> store
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u63A5\u4E0B\u6765\u770B\u4E0B<code>store</code>\u4E2D\u7684\u51E0\u4E2A\u65B9\u6CD5\uFF1A</p><h3 id="onaction" tabindex="-1"><code>$onAction</code> <a class="header-anchor" href="#onaction" aria-hidden="true">#</a></h3><p>\u5728\u6BCF\u4E2A<code>action</code>\u4E2D\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002\u56DE\u8C03\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\u53C2\u6570\uFF1A\u8BE5\u5BF9\u8C61\u5305\u542B<code>name</code>\uFF08<code>action</code>\u7684<code>key</code>\u503C\uFF09\u3001<code>store</code>\uFF08\u5F53\u524D<code>store</code>\uFF09\u3001<code>after</code>\uFF08\u6DFB\u52A0<code>action</code>\u6267\u884C\u5B8C\u4E4B\u540E\u7684\u56DE\u8C03\uFF09\u3001<code>onError</code>\uFF08\u6DFB\u52A0<code>action</code>\u6267\u884C\u8FC7\u7A0B\u4E2D\u7684\u9519\u8BEF\u56DE\u8C03\uFF09\u3001<code>args</code>\uFF08<code>action</code>\u7684\u53C2\u6570\uFF09\u5C5E\u6027\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u7EDF\u8BA1add action\u7684\u8C03\u7528\u6B21\u6570</span>
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> successCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> failCount <span class="token operator">=</span> <span class="token number">0</span>
store<span class="token punctuation">.</span><span class="token function">$onAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> after<span class="token punctuation">,</span> onError <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span>
    <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolveValue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      successCount<span class="token operator">++</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resolveValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
    <span class="token function">onError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      failCount<span class="token operator">++</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>$onAction</code>\u5185\u90E8\u901A\u8FC7\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\u5B9E\u73B0\u3002\u5728<code>pinia</code>\u4E2D\u6709\u4E2A\u4E13\u95E8\u7684\u8BA2\u9605\u6A21\u5757<code>subscriptions.ts</code>\uFF0C\u5176\u4E2D\u5305\u542B\u4E24\u4E2A\u4E3B\u8981\u65B9\u6CD5\uFF1A<code>addSubscription</code>\uFF08\u6DFB\u52A0\u8BA2\u9605\uFF09\u3001<code>triggerSubscriptions</code>\uFF08\u89E6\u53D1\u8BA2\u9605\uFF09\u3002</p><p><code>addSubscription</code>\u53EF\u63A5\u6536\u56DB\u4E2A\u53C2\u6570\uFF1A<code>subscriptions</code>\uFF08\u8BA2\u9605\u5217\u8868\uFF09\u3001<code>callback</code>\uFF08\u6DFB\u52A0\u7684\u8BA2\u9605\u51FD\u6570\uFF09\u3001<code>detached</code>\uFF08\u6E38\u79BB\u7684\u8BA2\u9605\uFF0C\u5982\u679C\u4E3A<code>false</code>\u5728\u7EC4\u4EF6\u5378\u8F7D\u540E\uFF0C\u81EA\u52A8\u79FB\u9664\u8BA2\u9605\uFF1B\u5982\u679C\u4E3A<code>true</code>\uFF0C\u4E0D\u4F1A\u81EA\u52A8\u79FB\u9664\u8BA2\u9605\uFF09\u3001<code>onCleanup</code>\uFF08\u8BA2\u9605\u88AB\u79FB\u9664\u65F6\u7684\u56DE\u8C03\uFF09</p><p><code>triggerSubscriptions</code>\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A<code>subscriptions</code>\uFF08\u8BA2\u9605\u5217\u8868\uFF09\u3001<code>args</code>\uFF08<code>action</code>\u7684\u53C2\u6570\u5217\u8868\uFF09</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">addSubscription</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> _Method<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  subscriptions<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  callback<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  detached<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onCleanup</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">=</span> noop
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">removeSubscription</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> idx <span class="token operator">=</span> subscriptions<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subscriptions<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token function">onCleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>detached <span class="token operator">&amp;&amp;</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onUnmounted</span><span class="token punctuation">(</span>removeSubscription<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> removeSubscription
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">triggerSubscriptions</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> _Method<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  subscriptions<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  subscriptions<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p><code>$onAction</code>\u901A\u8FC7<code>addSubscription.bind(null, actionSubscriptions)</code>\u5B9E\u73B0\u3002</p><p><strong>\u5982\u4F55\u89E6\u53D1\u8BA2\u9605\uFF1F</strong></p><p>\u9996\u5148\u5728<code>store</code>\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u5C06<code>action</code>\u4F7F\u7528<code>wrapAction</code>\u51FD\u6570\u8FDB\u884C\u5305\u88C5\uFF0C<code>wrapAction</code>\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u5728\u8FD9\u4E2A\u51FD\u6570\u4E2D\u4F1A\u5148\u89E6\u53D1<code>actionSubscriptions</code>\uFF0C\u8FD9\u4E2A\u89E6\u53D1\u8FC7\u7A0B\u4E2D\u4F1A\u5C06<code>afterCallback</code>\u3001<code>onErrorCallback</code>\u6DFB\u52A0\u5230\u5BF9\u5E94\u5217\u8868\u3002\u7136\u540E\u8C03\u7528<code>action</code>\uFF0C\u5982\u679C\u8C03\u7528\u8FC7\u7A0B\u4E2D\u51FA\u9519\uFF0C\u5219\u89E6\u53D1<code>onErrorCallbackList</code>\uFF0C\u5426\u5219\u89E6\u53D1<code>afterCallbackList</code>\u3002\u5982\u679C<code>action</code>\u7684\u7ED3\u679C\u662F<code>Promise</code>\u7684\u8BDD\uFF0C\u5219\u5728<code>then</code>\u4E2D\u89E6\u53D1<code>onErrorCallbackList</code>\uFF0C\u5728<code>catch</code>\u4E2D\u89E6\u53D1<code>onErrorCallbackList</code>\u3002\u7136\u540E\u4F1A\u5C06\u5305\u88C5\u540E\u7684<code>action</code>\u8986\u76D6\u539F\u59CB<code>action</code>\uFF0C\u8FD9\u6837\u6BCF\u6B21\u8C03\u7528<code>action</code>\u65F6\u5C31\u662F\u8C03\u7528\u7684\u5305\u88C5\u540E\u7684<code>action</code>\u3002</p><h3 id="patch" tabindex="-1"><code>$patch</code> <a class="header-anchor" href="#patch" aria-hidden="true">#</a></h3><p>\u4F7F\u7528<code>$patch</code>\u53EF\u4EE5\u66F4\u65B0<code>state</code>\u7684\u503C\uFF0C\u53EF\u8FDB\u884C\u6279\u91CF\u66F4\u65B0\u3002<code>$patch</code>\u63A5\u6536\u4E00\u4E2A<code>partialStateOrMutator</code>\u53C2\u6570\uFF0C\u5B83\u53EF\u4EE5\u662F\u4E2A\u5BF9\u8C61\u4E5F\u53EF\u4EE5\u662F\u4E2A\u65B9\u6CD5\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code>store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  state<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span>
  state<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">14</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// or</span>
store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">14</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>$patch</code>\u6E90\u7801\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">$patch</span><span class="token punctuation">(</span>
  partialStateOrMutator<span class="token operator">:</span>
    <span class="token operator">|</span> _DeepPartial<span class="token operator">&lt;</span>UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span>
    <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token operator">:</span> UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5408\u5E76\u7684\u76F8\u5173\u4FE1\u606F</span>
  <span class="token keyword">let</span> subscriptionMutation<span class="token operator">:</span> SubscriptionCallbackMutation<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span>
  <span class="token comment">// \u662F\u5426\u89E6\u53D1\u72B6\u6001\u4FEE\u6539\u540E\u7684\u56DE\u8C03\uFF0CisListening\u4EE3\u8868\u5F02\u6B65\u89E6\u53D1\uFF0CisSyncListening\u4EE3\u8868\u540C\u6B65\u89E6\u53D1</span>
  isListening <span class="token operator">=</span> isSyncListening <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    debuggerEvents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679CpartialStateOrMutator\u662F\u4E2Afunction\uFF0C\u6267\u884C\u65B9\u6CD5\uFF0C\u4F20\u5165\u5F53\u524D\u7684store</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> partialStateOrMutator <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">partialStateOrMutator</span><span class="token punctuation">(</span>pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span> <span class="token keyword">as</span> UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    subscriptionMutation <span class="token operator">=</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> MutationType<span class="token punctuation">.</span>patchFunction<span class="token punctuation">,</span>
      storeId<span class="token operator">:</span> $id<span class="token punctuation">,</span>
      events<span class="token operator">:</span> debuggerEvents <span class="token keyword">as</span> DebuggerEvent<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u4E0D\u662Ffunction\uFF0C\u5219\u8C03\u7528mergeReactiveObjects\u5408\u5E76state</span>
    <span class="token function">mergeReactiveObjects</span><span class="token punctuation">(</span>pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span><span class="token punctuation">,</span> partialStateOrMutator<span class="token punctuation">)</span>
    subscriptionMutation <span class="token operator">=</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> MutationType<span class="token punctuation">.</span>patchObject<span class="token punctuation">,</span>
      payload<span class="token operator">:</span> partialStateOrMutator<span class="token punctuation">,</span>
      storeId<span class="token operator">:</span> $id<span class="token punctuation">,</span>
      events<span class="token operator">:</span> debuggerEvents <span class="token keyword">as</span> DebuggerEvent<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> myListenerId <span class="token operator">=</span> <span class="token punctuation">(</span>activeListener <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>activeListener <span class="token operator">===</span> myListenerId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      isListening <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  isSyncListening <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u56E0\u4E3A\u5728\u4FEE\u6539pinia.state.value[$id]\u7684\u8FC7\u7A0B\u4E2D\u5173\u95ED\u4E86\u76D1\u542C\uFF0C\u6240\u4EE5\u9700\u8981\u624B\u52A8\u89E6\u53D1\u8BA2\u9605\u5217\u8868</span>
  <span class="token function">triggerSubscriptions</span><span class="token punctuation">(</span>
    subscriptions<span class="token punctuation">,</span>
    subscriptionMutation<span class="token punctuation">,</span>
    pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span> <span class="token keyword">as</span> UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="reset" tabindex="-1"><code>$reset</code> <a class="header-anchor" href="#reset" aria-hidden="true">#</a></h3><p>\u901A\u8FC7\u6784\u5EFA\u4E00\u4E2A\u65B0\u7684<code>state object</code>\u5C06<code>state</code>\u91CD\u7F6E\u4E3A\u521D\u59CB\u72B6\u6001\u3002\u53EA\u5728<code>options</code>\u914D\u7F6E\u4E0B\u751F\u6548\u3002\u5982\u679C\u662F<code>setup</code>\u914D\u7F6E\uFF0C\u5F00\u53D1\u73AF\u5883\u4E0B\u62A5\u9519\u3002</p><div class="language-ts line-numbers-mode"><pre><code>store<span class="token punctuation">.</span><span class="token function-variable function">$reset</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">$reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u91CD\u65B0\u6267\u884Cstate\uFF0C\u83B7\u53D6\u4E00\u4E2A\u65B0\u7684state</span>
  <span class="token keyword">const</span> newState <span class="token operator">=</span> state <span class="token operator">?</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u901A\u8FC7$patch\uFF0C\u4F7F\u7528assign\u5C06newState\u5408\u5E76\u5230$state\u4E2D</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>$state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">assign</span><span class="token punctuation">(</span>$state<span class="token punctuation">,</span> newState<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="subscribe" tabindex="-1"><code>$subscribe</code> <a class="header-anchor" href="#subscribe" aria-hidden="true">#</a></h3><p>\u8BBE\u7F6E<code>state</code>\u6539\u53D8\u540E\u7684\u56DE\u8C03\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u79FB\u9664\u56DE\u8C03\u7684\u51FD\u6570\u3002\u53EF\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A<code>callback</code>\uFF08\u6DFB\u52A0\u7684\u56DE\u8C03\u51FD\u6570\uFF09\u3001<code>options:{detached, flush, ...watchOptions}</code>\uFF08<code>detached</code>\u540C<code>addSubscription</code>\u4E2D\u7684<code>detached</code>\uFF1B<code>flush</code>\u4EE3\u8868\u662F\u5426\u540C\u6B65\u89E6\u53D1\u56DE\u8C03\uFF0C\u53EF\u53D6\u503C\uFF1A<code>sync</code>\uFF09\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code>store<span class="token punctuation">.</span><span class="token function">$subribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mutation<span class="token operator">:</span> <span class="token punctuation">{</span>storeId<span class="token punctuation">,</span> type<span class="token punctuation">,</span> events<span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>storeId<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> detached<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> flush<span class="token operator">:</span> <span class="token string">&#39;sync&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>$subscribe</code>\u6E90\u7801\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">$subscribe</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5C06callback\u6DFB\u52A0\u5230subscriptions\u4E2D\uFF0C\u4EE5\u4FBF\u4F7F\u7528$patch\u66F4\u65B0\u72B6\u6001\u65F6\uFF0C\u89E6\u53D1\u56DE\u8C03</span>
  <span class="token comment">// \u5F53\u4F7F\u7528removeSubscription\u79FB\u9664callback\u65F6\uFF0C\u505C\u6B62\u5BF9pinia.state.value[$id]\u76D1\u542C</span>
  <span class="token keyword">const</span> removeSubscription <span class="token operator">=</span> <span class="token function">addSubscription</span><span class="token punctuation">(</span>
    subscriptions<span class="token punctuation">,</span>
    callback<span class="token punctuation">,</span>
    options<span class="token punctuation">.</span>detached<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">stopWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">const</span> stopWatcher <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token comment">// \u76D1\u542Cpinia.state.value[$id]\uFF0C\u4EE5\u89E6\u53D1callback\uFF0C\u5F53\u4F7F\u7528$patch\u66F4\u65B0state\u65F6\uFF0C\u4E0D\u4F1A\u89E6\u53D1\u4E0B\u9762\u7684callback</span>
    <span class="token function">watch</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>$id<span class="token punctuation">]</span> <span class="token keyword">as</span> UnwrapRef<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>flush <span class="token operator">===</span> <span class="token string">&#39;sync&#39;</span> <span class="token operator">?</span> isSyncListening <span class="token operator">:</span> isListening<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">callback</span><span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
              storeId<span class="token operator">:</span> $id<span class="token punctuation">,</span>
              type<span class="token operator">:</span> MutationType<span class="token punctuation">.</span>direct<span class="token punctuation">,</span>
              events<span class="token operator">:</span> debuggerEvents <span class="token keyword">as</span> DebuggerEvent<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            state
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> $subscribeOptions<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token operator">!</span>

  <span class="token keyword">return</span> removeSubscription
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u5728<code>callback</code>\u4E2D\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E2D\u6709\u4E2A<code>type</code>\u5C5E\u6027\uFF0C\u8868\u793A\u662F\u901A\u8FC7\u4EC0\u4E48\u65B9\u5F0F\u66F4\u65B0\u7684<code>state</code>\uFF0C\u5B83\u6709\u4E09\u4E2A\u503C\uFF1A</p><ol><li><code>MutationType.direct</code>\uFF1A\u901A\u8FC7<code>state.name=&#39;xxx&#39;</code>/<code>store.$state.name=&#39;xxx&#39;</code>\u7B49\u65B9\u5F0F\u4FEE\u6539</li><li><code>MutationType.patchObject</code>\uFF1A\u901A\u8FC7<code>store.$patch({ name: &#39;xxx&#39; })</code>\u65B9\u5F0F\u4FEE\u6539</li><li><code>MutationType.patchFunction</code>\uFF1A\u901A\u8FC7<code>store.$patch((state) =&gt; state.name=&#39;xxx&#39;)</code>\u65B9\u5F0F\u4FEE\u6539</li></ol><h3 id="dispose" tabindex="-1"><code>$dispose</code> <a class="header-anchor" href="#dispose" aria-hidden="true">#</a></h3><p>\u9500\u6BC1<code>store</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">$dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u505C\u6B62\u76D1\u542C</span>
  scope<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6E05\u7A7Asubscriptions\u53CAactionSubscriptions</span>
  subscriptions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  actionSubscriptions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u4ECEpinia._s\u4E2D\u5220\u9664store</span>
  pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="createoptionsstore" tabindex="-1"><code>createOptionsStore</code> <a class="header-anchor" href="#createoptionsstore" aria-hidden="true">#</a></h2><p><code>createOptionsStore</code>\u53EF\u63A5\u6536\u53C2\u6570\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th></th></tr></thead><tbody><tr><td><code>id</code></td><td>\u5B9A\u4E49<code>store</code>\u7684<code>id</code></td><td></td></tr><tr><td><code>options</code></td><td><code>defineStore</code>\u7684<code>options</code></td><td></td></tr><tr><td><code>pinia</code></td><td><code>Pinia</code>\u5B9E\u4F8B</td><td></td></tr><tr><td><code>hot</code></td><td>\u662F\u5426\u542F\u7528\u70ED\u66F4\u65B0</td><td>\u53EF\u9009</td></tr></tbody></table><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createOptionsStore</span><span class="token generic class-name"><span class="token operator">&lt;</span>
  Id <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token constant">S</span> <span class="token keyword">extends</span> StateTree<span class="token punctuation">,</span>
  <span class="token constant">G</span> <span class="token keyword">extends</span> _GettersTree<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token constant">A</span> <span class="token keyword">extends</span> _ActionsTree
<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  id<span class="token operator">:</span> Id<span class="token punctuation">,</span>
  options<span class="token operator">:</span> DefineStoreOptions<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  pinia<span class="token operator">:</span> Pinia<span class="token punctuation">,</span>
  hot<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Store<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> actions<span class="token punctuation">,</span> getters <span class="token punctuation">}</span> <span class="token operator">=</span> options

  <span class="token keyword">const</span> initialState<span class="token operator">:</span> StateTree <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>id<span class="token punctuation">]</span>

  <span class="token keyword">let</span> store<span class="token operator">:</span> Store<span class="token operator">&lt;</span>Id<span class="token punctuation">,</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">G</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span>

  <span class="token keyword">function</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679Cpinia.state.value[id]\u4E0D\u5B58\u5728\uFF0C\u8FDB\u884C\u521D\u59CB\u5316</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialState <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>__DEV__ <span class="token operator">||</span> <span class="token operator">!</span>hot<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">set</span><span class="token punctuation">(</span>pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">,</span> id<span class="token punctuation">,</span> state <span class="token operator">?</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> state <span class="token operator">?</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C06pinia.state.value[id]\u5404\u5C5E\u6027\u503C\u8F6C\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61</span>
    <span class="token keyword">const</span> localState <span class="token operator">=</span>
      __DEV__ <span class="token operator">&amp;&amp;</span> hot
        <span class="token operator">?</span> <span class="token comment">// use ref() to unwrap refs inside state TODO: check if this is still necessary</span>
          <span class="token function">toRefs</span><span class="token punctuation">(</span><span class="token function">ref</span><span class="token punctuation">(</span>state <span class="token operator">?</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>pinia<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5904\u7406getters\uFF0C\u5E76\u5C06\u5904\u7406\u540E\u7684getters\u548Cactions\u5408\u5E76\u5230localState\u4E2D</span>
    <span class="token keyword">return</span> <span class="token function">assign</span><span class="token punctuation">(</span>
      localState<span class="token punctuation">,</span>
      actions<span class="token punctuation">,</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>getters <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>computedGetters<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        computedGetters<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">markRaw</span><span class="token punctuation">(</span>
          <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setActivePinia</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>
            <span class="token keyword">const</span> store <span class="token operator">=</span> pinia<span class="token punctuation">.</span>_s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token operator">!</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isVue2 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>store<span class="token punctuation">.</span>_r<span class="token punctuation">)</span> <span class="token keyword">return</span>

            <span class="token keyword">return</span> getters<span class="token operator">!</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> store<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">return</span> computedGetters
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> ComputedRef<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5229\u7528createSetupStore\u521B\u5EFAstore</span>
  store <span class="token operator">=</span> <span class="token function">createSetupStore</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> setup<span class="token punctuation">,</span> options<span class="token punctuation">,</span> pinia<span class="token punctuation">,</span> hot<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

  <span class="token comment">// \u91CD\u5199store.$reset</span>
  store<span class="token punctuation">.</span><span class="token function-variable function">$reset</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">$reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newState <span class="token operator">=</span> state <span class="token operator">?</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>$state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">assign</span><span class="token punctuation">(</span>$state<span class="token punctuation">,</span> newState<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> store <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>\u5728<code>createOptionsStore</code>\u4E2D\u4F1A\u6839\u636E\u4F20\u5165\u53C2\u6570\u6784\u9020\u4E00\u4E2A<code>setup</code>\u51FD\u6570\uFF0C\u7136\u540E\u901A\u8FC7<code>createSetupStore</code>\u521B\u5EFA\u4E00\u4E2A<code>store</code>\uFF0C\u5E76\u91CD\u5199<code>store.$reset</code>\u65B9\u6CD5\uFF0C\u6700\u540E\u8FD4\u56DE<code>store</code>\u3002</p><p>\u8FD9\u4E2A<code>setup</code>\u51FD\u6570\u4E2D\u4F1A\u5C06<code>state()</code>\u7684\u8FD4\u56DE\u503C\u8D4B\u503C\u7ED9<code>pinia.state.value[id]</code>\uFF0C\u7136\u540E\u5C06<code>pinia.state.value[id]</code>\u8FDB\u884C<code>toRefs</code>\uFF0C\u5F97\u5230<code>localState</code>\uFF0C\u6700\u540E\u5C06\u5904\u7406\u540E\u7684<code>getters</code>\u548C<code>actions</code>\u90FD\u5408\u5E76\u5230<code>localState</code>\u4E2D\uFF0C\u5C06\u5176\u8FD4\u56DE\u3002\u5BF9\u4E8E<code>getters</code>\u7684\u5904\u7406\uFF1A\u5C06\u6BCF\u4E2A<code>getter</code>\u51FD\u6570\u90FD\u8F6C\u6210\u4E00\u4E2A\u8BA1\u7B97\u5C5E\u6027\u3002</p>`,77),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{m as __pageData,f as default};
