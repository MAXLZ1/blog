import{_ as n,c as s,o as a,d as p}from"./app.c61480c7.js";const m='{"title":"toRaw","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/reactive/toRaw.md"}',e={},o=p(`<h1 id="toraw" tabindex="-1">toRaw <a class="header-anchor" href="#toraw" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>toRaw</code>\u8FD4\u56DE<code>reactive</code>\u6216<code>readonly</code>\u4EE3\u7406\u7684\u539F\u59CB\u5BF9\u8C61\u3002\u4FEE\u6539\u539F\u59CB\u5BF9\u8C61\u4E0D\u4F1A\u89E6\u53D1\u4F9D\u8D56\u3002</p></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> reactiveFoo <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span>

<span class="token keyword">let</span> dummy
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  dummy <span class="token operator">=</span> reactiveFoo<span class="token punctuation">.</span>bar
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dummy<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token function">toRaw</span><span class="token punctuation">(</span>reactiveFoo<span class="token punctuation">)</span><span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dummy<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">toRaw</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>observed<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> raw <span class="token operator">=</span> observed <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>observed <span class="token keyword">as</span> Target<span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span>
  <span class="token keyword">return</span> raw <span class="token operator">?</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span> <span class="token operator">:</span> observed
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>roRaw</code>\u4E2D\uFF0C\u9996\u5148\u4ECE<code>observed</code>\u83B7\u53D6<code>__v_raw</code>\uFF08<code>ReactiveFlags.RAW</code>\uFF09\u5BF9\u5E94\u7684\u503C\uFF0C\u5982\u679C\u6709\u503C\uFF0C\u5C06\u8BE5\u503C\u7EE7\u7EED<code>toRaw</code>\uFF0C\u76F4\u5230\u4E0D\u80FD\u53D6\u5230<code>__v_raw</code>\u5BF9\u5E94\u7684\u503C\uFF0C\u8FD4\u56DE<code>observed</code>\u3002</p><p><strong>\u4E3A\u4EC0\u4E48\u901A\u8FC7\u68C0\u6D4B<code>__v_raw</code>\u5C5E\u6027\uFF0C\u6765\u83B7\u53D6\u539F\u59CB\u5BF9\u8C61\uFF1F</strong></p><p>\u5728<code>proxy</code>\u7684<code>get</code>\u62E6\u622A\u51FD\u6570\u4E2D\uFF0C\u68C0\u6D4B\u5230<code>key</code>\u662F<code>__v_raw</code>\u65F6\uFF0C\u4F1A\u8FD4\u56DE<code>target</code>\uFF0C\u4E5F\u5C31\u662F\u4EE3\u7406\u7684\u539F\u59CB\u5BF9\u8C61\u3002<code>__v_raw</code>\u5C5E\u6027\u4E0D\u4F1A\u663E\u793A\u51FA\u73B0\u5728<code>proxy</code>\u7684\u539F\u578B\u4E0A\uFF0C\u5982\u679C\u6253\u5370<code>proxy</code>\uFF0C\u4F60\u4F1A\u53D1\u73B0\u5BF9\u8C61\u4E0A\u6CA1\u6709<code>__v_raw</code>\u8FD9\u4E2A\u5C5E\u6027\u3002\u901A\u8FC7<code>proxy</code>\u7684<code>get</code>\u62E6\u622A\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u9690\u85CF\u4E00\u4E9B\u4E0D\u5FC5\u66B4\u9732\u7684\u5C5E\u6027\u3002\u5982\uFF1A<code>ReactiveFlags.IS_REACTIVE</code>\u3001<code>ReactiveFlags.IS_READONLY</code>\u7B49\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">createGetter</span><span class="token punctuation">(</span>isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Target<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> receiver<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span>isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_SHALLOW</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> shallow
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
      key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span> <span class="token operator">&amp;&amp;</span>
      receiver <span class="token operator">===</span>
        <span class="token punctuation">(</span>isReadonly
          <span class="token operator">?</span> shallow
            <span class="token operator">?</span> shallowReadonlyMap
            <span class="token operator">:</span> readonlyMap
          <span class="token operator">:</span> shallow
          <span class="token operator">?</span> shallowReactiveMap
          <span class="token operator">:</span> reactiveMap
        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>

    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,8),t=[o];function c(l,r,u,i,k,d){return a(),s("div",null,t)}var w=n(e,[["render",c]]);export{m as __pageData,w as default};
