import{_ as n,c as s,o as a,d as p}from"./app.b5e9419e.js";const m='{"title":"readonly","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/reactive/readonly.md"}',t={},e=p(`<h1 id="readonly" tabindex="-1">readonly <a class="header-anchor" href="#readonly" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\uFF08\u54CD\u5E94\u5F0F\u6216\u7EAF\u5BF9\u8C61\uFF09\u6216<code>ref</code>\u5E76\u8FD4\u56DE\u539F\u59CB\u5BF9\u8C61\u7684\u53EA\u8BFB\u4EE3\u7406\u3002\u4EFB\u4F55\u88AB\u8BBF\u95EE\u7684\u5D4C\u5957 property \u4E5F\u662F\u53EA\u8BFB\u7684\u3002</p></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> copy <span class="token operator">=</span> <span class="token keyword">readonly</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span>
original<span class="token punctuation">.</span>count<span class="token operator">++</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>original<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token comment">// 1 </span>

<span class="token comment">// \u8FDB\u5165readonlyHandlers-set\uFF0C\u53D1\u51FA\u8B66\u544A</span>
copy<span class="token punctuation">.</span>count<span class="token operator">++</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copy<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token keyword">readonly</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">)</span><span class="token operator">:</span> DeepReadonly<span class="token operator">&lt;</span>UnwrapNestedRefs<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>
    target<span class="token punctuation">,</span>
    <span class="token boolean">true</span><span class="token punctuation">,</span>
    readonlyHandlers<span class="token punctuation">,</span>
    readonlyCollectionHandlers<span class="token punctuation">,</span>
    readonlyMap
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>readonly</code>\u540C\u6837\u4F7F\u7528<code>createReactiveObject</code>\u521B\u5EFA\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\uFF0C\u6D41\u7A0B\u4E0E<code>reactive</code>\u76F8\u540C\u3002\u4E0E<code>reactive</code>\u4E0D\u540C\u7684\u662F<code>createReactiveObject</code>\u4E2D\u4F20\u5165\u7684<code>isReadonly</code>\u4E3A<code>true</code>\uFF0C<code>new proxy</code>\u65F6\u7684<code>handler</code>\u4E5F\u4E0D\u540C\u3002</p><p><code>baseHandlers.ts</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> readonlyHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>object<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token operator">:</span> readonlyGet<span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Set operation on key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; failed: target is readonly.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        target
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Delete operation on key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; failed: target is readonly.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        target
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4ECE<code>readonlyHandlers</code>\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C<code>set</code>\u548C<code>deleteProperty</code>\u4E2D\u662F\u6CA1\u6709\u989D\u5916\u64CD\u4F5C\u7684\uFF0C\u8FD9\u4E5F\u5C31\u610F\u5473\u7740<code>readonly(target)</code>\u7684\u5C5E\u6027\u662F\u53EA\u8BFB\u7684\uFF0C\u4E0D\u5141\u8BB8\u4FEE\u6539\u548C\u5220\u9664</p><p><code>collectionHandlers.ts</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>type<span class="token operator">:</span> TriggerOpTypes<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> CollectionTypes<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">capitalize</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> operation </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">failed: target is readonly.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> type <span class="token operator">===</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  
  <span class="token keyword">const</span> readonlyInstrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> IterableCollections<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    add<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    set<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    clear<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">CLEAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    forEach<span class="token operator">:</span> <span class="token function">createForEach</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> readonlyCollectionHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>CollectionTypes<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token operator">:</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">createInstrumentationGetter</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p><code>readonlyCollectionHandlers</code>\u62E6\u622A\u6240\u6709\u53EF\u80FD\u4FEE\u6539\u96C6\u5408\u7684\u65B9\u6CD5\uFF0C\u5305\u62EC<code>add</code>\u3001<code>set</code>\u3001<code>delete</code>\u3001<code>clear</code>\uFF0C\u4F7F\u8FD9\u4E9B\u65B9\u6CD5\u4E0D\u80FD\u591F\u4FEE\u6539\u96C6\u5408\u3002</p><p>\u4F7F\u7528<code>readonly</code>\u58F0\u660E\u7684\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u56E0\u4E3A\u6240\u6709\u5C5E\u6027\u90FD\u4E0D\u4F1A\u4FEE\u6539\uFF0C\u6240\u4EE5\u5728<code>get</code>\u3001<code>size</code>\u7B49\u4E00\u4E9B\u67E5\u8BE2\u7684\u65B9\u6CD5\u4E2D\u662F\u4E0D\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> MapTypes<span class="token punctuation">,</span>
  key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  isShallow <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  
  <span class="token comment">// \u975E\u53EA\u8BFB\u65F6\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span>
  <span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token function">track</span><span class="token punctuation">(</span>rawTarget<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> rawKey<span class="token punctuation">)</span>
  
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">size</span><span class="token punctuation">(</span>target<span class="token operator">:</span> IterableCollections<span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span>
  
  <span class="token comment">// \u975E\u53EA\u8BFB\u65F6\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span>
  <span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token function">toRaw</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;size&#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,13),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{m as __pageData,y as default};
