import{_ as n,c as s,o as a,d as p}from"./app.c61480c7.js";const m='{"title":"computed","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4F7F\u7528\u793A\u4F8B","slug":"\u4F7F\u7528\u793A\u4F8B"},{"level":2,"title":"\u6E90\u7801","slug":"\u6E90\u7801"},{"level":3,"title":"ComputedRefImpl","slug":"computedrefimpl"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"vue3-analysis/reactivity/computed.md"}',e={},t=p(`<h1 id="computed" tabindex="-1">computed <a class="header-anchor" href="#computed" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u8BA1\u7B97\u5C5E\u6027\u3002\u63A5\u53D7\u4E00\u4E2A<code>getter</code>\u51FD\u6570\uFF0C\u5E76\u6839\u636E<code>getter</code>\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u8FD4\u56DE\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u54CD\u5E94\u5F0F<code>ref</code>\u5BF9\u8C61\u3002\u6216\u8005\uFF0C\u63A5\u53D7\u4E00\u4E2A\u5177\u6709<code>get</code>\u548C<code>set</code>\u51FD\u6570\u7684\u5BF9\u8C61\uFF0C\u7528\u6765\u521B\u5EFA\u53EF\u5199\u7684<code>ref</code>\u5BF9\u8C61\u3002</p><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1Apackages/reactivity/src/computed.ts</p></div><h2 id="\u4F7F\u7528\u793A\u4F8B" tabindex="-1">\u4F7F\u7528\u793A\u4F8B <a class="header-anchor" href="#\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a></h2><p>\u53EA\u8BFB\u7684\u8BA1\u7B97\u5C5E\u6027\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doubleCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 2</span>

count<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doubleCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53EF\u5199\u7684\u8BA1\u7B97\u5C5E\u6027\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span>value <span class="token operator">=</span> val <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plusOne<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 2</span>

plusOne<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FDB\u884C\u8C03\u8BD5\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">onTrack</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;track&#39;</span><span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onTrigger</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;trigger&#39;</span><span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u89E6\u53D1track\u76D1\u542C</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doubleCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

<span class="token comment">// \u89E6\u53D1trigger\u76D1\u542C</span>
count<span class="token punctuation">.</span>value<span class="token operator">++</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u6E90\u7801" tabindex="-1">\u6E90\u7801 <a class="header-anchor" href="#\u6E90\u7801" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">computed</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  getterOrOptions<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> WritableComputedOptions<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  debugOptions<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions<span class="token punctuation">,</span>
  isSSR <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  <span class="token keyword">let</span> setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>

  <span class="token keyword">const</span> onlyGetter <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>getterOrOptions<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyGetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> getterOrOptions
    setter <span class="token operator">=</span> __DEV__
      <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Write operation failed: computed value is readonly&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> <span class="token constant">NOOP</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>get
    setter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>set
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> cRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComputedRefImpl</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> setter<span class="token punctuation">,</span> onlyGetter <span class="token operator">||</span> <span class="token operator">!</span>setter<span class="token punctuation">,</span> isSSR<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> debugOptions <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cRef<span class="token punctuation">.</span>effect<span class="token punctuation">.</span>onTrack <span class="token operator">=</span> debugOptions<span class="token punctuation">.</span>onTrack
    cRef<span class="token punctuation">.</span>effect<span class="token punctuation">.</span>onTrigger <span class="token operator">=</span> debugOptions<span class="token punctuation">.</span>onTrigger
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> cRef <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><code>computed</code>\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E8C\u53C2\u6570\u662F\u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1\u4F9D\u8D56\u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u53EA\u5728\u5F00\u53D1\u73AF\u5883\u4E2D\u8D77\u4F5C\u7528\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u505A\u89E3\u91CA\u4E86\u3002\u4E3B\u8981\u770B\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u89C2\u5BDF\u5176\u7C7B\u578B\uFF0C\u53D1\u73B0\u53EF\u4EE5\u4F20\u4E24\u79CD\u53C2\u6570\uFF1A\u4E00\u79CD\u662F\u4E00\u4E2A<code>getter</code>\u51FD\u6570\uFF0C\u4E00\u79CD\u662F\u4E2A\u5305\u542B<code>get</code>\u3001<code>set</code>\u7684\u5BF9\u8C61\u3002</p><p>\u9996\u5148\u4ECE<code>getterOrOptions</code>\u4E2D\u786E\u5B9A<code>getter</code>\u3001<code>setter</code>\uFF08\u5982\u679C<code>getterOrOptions</code>\u662F\u4E2A<code>function</code>\uFF0C\u8BF4\u660E<code>computed</code>\u662F\u4E0D\u53EF\u5199\u7684\uFF0C\u6240\u4EE5\u4F1A\u5C06<code>setter</code>\u8BBE\u7F6E\u4E3A\u4E00\u4E2A\u7A7A\u51FD\u6570\uFF09\uFF0C\u786E\u5B9A\u597D\u4E4B\u540E\uFF0C\u521B\u5EFA\u4E00\u4E2A<code>ComputedRefImpl</code>\u5B9E\u4F8B\uFF0C\u5E76\u5C06\u5176\u8FD4\u56DE\u3002</p><h3 id="computedrefimpl" tabindex="-1">ComputedRefImpl <a class="header-anchor" href="#computedrefimpl" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ComputedRefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token comment">// \u7F13\u5B58\u7684\u503C</span>
  <span class="token keyword">private</span> _value<span class="token operator">!</span><span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token comment">// \u5728\u6784\u9020\u5668\u4E2D\u521B\u5EFA\u7684ReactiveEffect\u5B9E\u4F8B</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>

  <span class="token comment">// \u6807\u8BB0\u4E3A\u4E00\u4E2Aref\u7C7B\u578B</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u53EA\u8BFB\u6807\u8BC6</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token comment">// \u662F\u5426\u4E3A\u810F\u6570\u636E\uFF0C\u5982\u679C\u662F\u810F\u6570\u636E\u9700\u8981\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">public</span> _dirty <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u662F\u5426\u53EF\u7F13\u5B58\uFF0C\u53D6\u51B3\u4E8ESSR</span>
  <span class="token keyword">public</span> _cacheable<span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>
    getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> _setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
    isSSR<span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_cacheable <span class="token operator">=</span> <span class="token operator">!</span>isSSR
    <span class="token keyword">this</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span> <span class="token operator">=</span> isReadonly
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// computed\u53EF\u80FD\u88AB\u5176\u4ED6proxy\u5305\u88F9\uFF0C\u5982readonly(computed(() =&gt; foo.bar))\uFF0C\u6240\u4EE5\u8981\u83B7\u53D6this\u7684\u539F\u59CB\u5BF9\u8C61</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u662F\u810F\u6570\u636E\u6216\u8005\u662FSSR\uFF0C\u9700\u8981\u91CD\u65B0\u8BA1\u7B97</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_dirty <span class="token operator">||</span> <span class="token operator">!</span>self<span class="token punctuation">.</span>_cacheable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// _dirty\u53D6false\uFF0C\u9632\u6B62\u4F9D\u8D56\u4E0D\u53D8\u91CD\u590D\u8BA1\u7B97</span>
      self<span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token comment">// \u8BA1\u7B97</span>
      self<span class="token punctuation">.</span>_value <span class="token operator">=</span> self<span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_setter</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h4 id="\u6784\u9020\u5668" tabindex="-1">\u6784\u9020\u5668 <a class="header-anchor" href="#\u6784\u9020\u5668" aria-hidden="true">#</a></h4><p><code>ComputedRefImpl</code>\u6784\u9020\u5668\u63A5\u6536\u56DB\u4E2A\u53C2\u6570\uFF1A<code>getter</code>\u3001<code>setter</code>\u3001<code>isReadonly</code>\uFF08\u662F\u5426\u53EA\u8BFB\uFF09\u3001<code>isSSR</code>\uFF08\u662F\u5426\u4E3A<code>SSR</code>\uFF09\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token function">constructor</span><span class="token punctuation">(</span>
  getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token keyword">private</span> <span class="token keyword">readonly</span> _setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  isSSR<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// this.effect.computed\u6307\u5411this</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token comment">// this.effect.active\u4E0Ethis._cacheable\u5728SSR\u4E2D\u4E3Afalse</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_cacheable <span class="token operator">=</span> <span class="token operator">!</span>isSSR
  <span class="token keyword">this</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span> <span class="token operator">=</span> isReadonly
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5728\u6784\u9020\u5668\u4E2D\u58F0\u660E\u4E86\u4E00\u4E2A<code>ReactiveEffect</code>\uFF0C\u5E76\u5C06<code>getter</code>\u548C\u4E00\u4E2A\u8C03\u5EA6\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u5728\u8C03\u5EA6\u5668\u4E2D\u5982\u679C<code>_dirty</code>\u4E3A<code>false</code>\uFF0C\u4F1A\u5C06<code>_dirty</code>\u8BBE\u7F6E\u4E3A<code>true</code>\uFF0C\u5E76\u6267\u884C<code>triggerRefValue</code>\u51FD\u6570\u3002</p><p><code>triggerRefValue</code>\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u503C\uFF1A<code>ref</code>\u3001<code>newVal</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">triggerRefValue</span><span class="token punctuation">(</span>ref<span class="token operator">:</span> RefBase<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> newVal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ref <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">triggerEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        target<span class="token operator">:</span> ref<span class="token punctuation">,</span>
        type<span class="token operator">:</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span>
        newValue<span class="token operator">:</span> newVal
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">triggerEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>triggerRefValue</code>\u4E2D\u9996\u5148\u83B7\u53D6<code>ref</code>\u7684\u539F\u59CB\u5BF9\u8C61\uFF0C\u5982\u679C<code>ref</code>\u7684\u539F\u59CB\u5BF9\u8C61\u4E2D\u6709<code>dep</code>\u5C5E\u6027\uFF0C\u5219\u89E6\u53D1<code>dep</code>\u4E2D\u7684\u4F9D\u8D56\u3002</p><p>\u5728\u521D\u59CB\u5316<code>effect</code>\u4E4B\u540E\uFF0C\u4F1A\u5C06\u8FD9\u4E2A<code>effect</code>\u8D4B\u7ED9<code>ComputedRefImpl</code>\u5B9E\u4F8B\u7684<code>effect</code>\u5C5E\u6027\uFF0C\u5E76\u5C06<code>effect.computed</code>\u6307\u5411<code>ComputedRefImpl</code>\u5B9E\u4F8B</p><h4 id="value\u53D6\u503C\u51FD\u6570" tabindex="-1">value\u53D6\u503C\u51FD\u6570 <a class="header-anchor" href="#value\u53D6\u503C\u51FD\u6570" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// computed\u53EF\u80FD\u88AB\u5176\u4ED6proxy\u5305\u88F9\uFF0C\u5982readonly(computed(() =&gt; foo.bar))\uFF0C\u6240\u4EE5\u8981\u83B7\u53D6this\u7684\u539F\u59CB\u5BF9\u8C61</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
  <span class="token function">trackRefValue</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679C\u662F\u810F\u6570\u636E\uFF0C\u9700\u8981\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_dirty <span class="token operator">||</span> <span class="token operator">!</span>self<span class="token punctuation">.</span>_cacheable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// _dirty\u53D6false\uFF0C\u9632\u6B62\u4F9D\u8D56\u4E0D\u53D8\u91CD\u590D\u8BA1\u7B97</span>
    self<span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">// \u8BA1\u7B97</span>
    self<span class="token punctuation">.</span>_value <span class="token operator">=</span> self<span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> self<span class="token punctuation">.</span>_value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5F53\u8BFB\u53D6<code>ComputedRefImpl</code>\u5B9E\u4F8B\u7684<code>value</code>\u5C5E\u6027\u65F6\uFF0C\u7531\u4E8E\u8BA1\u7B97\u5C5E\u6027\u53EF\u80FD\u88AB\u5176\u4ED6proxy\u5305\u88F9\uFF0C\u6240\u4EE5\u9700\u8981\u4F7F\u7528<code>toRaw</code>\u83B7\u53D6\u5176\u539F\u59CB\u5BF9\u8C61\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u7136\u540E\u8C03\u7528<code>trackRefValue</code>\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trackRefValue</span><span class="token punctuation">(</span>ref<span class="token operator">:</span> RefBase<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5141\u8BB8\u6536\u96C6\u5E76\u4E14\u5B58\u5728activeEffect\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrack <span class="token operator">&amp;&amp;</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ref <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trackEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">||</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        target<span class="token operator">:</span> ref<span class="token punctuation">,</span>
        type<span class="token operator">:</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">trackEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">||</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u63A5\u7740\u6839\u636E<code>_dirty</code>\u4E0E<code>_cacheable</code>\u5C5E\u6027\u6765\u51B3\u5B9A\u662F\u5426\u9700\u8981\u4FEE\u6539<code>self._value</code>\uFF0C\u5176\u4E2D<code>_dirty</code>\u8868\u793A\u662F\u5426\u4E3A\u810F\u6570\u636E\uFF0C<code>_cacheable</code>\u8868\u793A\u662F\u5426\u53EF\u4EE5\u7F13\u5B58\uFF08\u53D6\u51B3\u4E8E\u662F\u5426\u4E3A\u670D\u52A1\u7AEF\u6E32\u67D3\uFF0C\u5982\u679C\u4E3A\u670D\u52A1\u7AEF\u6E32\u67D3\u5219\u4E0D\u53EF\u4EE5\u7F13\u5B58\uFF09\u3002\u5982\u679C\u662F\u810F\u6570\u636E\u6216\u4E0D\u53EF\u4EE5\u88AB\u7F13\u5B58\uFF0C\u90A3\u4E48\u4F1A\u5C06<code>_dirty</code>\u8BBE\u7F6E\u4E3A<code>false</code>\uFF0C\u5E76\u8C03\u7528<code>self.effect.run()</code>\uFF0C\u4FEE\u6539<code>self._value</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_dirty <span class="token operator">||</span> <span class="token operator">!</span>self<span class="token punctuation">.</span>_cacheable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  self<span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span>
  self<span class="token punctuation">.</span>_value <span class="token operator">=</span> self<span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6700\u540E\u8FD4\u56DE<code>self._value</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">return</span> self<span class="token punctuation">.</span>_value
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h4 id="value\u5B58\u503C\u51FD\u6570" tabindex="-1">value\u5B58\u503C\u51FD\u6570 <a class="header-anchor" href="#value\u5B58\u503C\u51FD\u6570" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_setter</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u4FEE\u6539<code>ComputedRefImpl</code>\u5B9E\u4F8B\u7684<code>value</code>\u5C5E\u6027\u65F6\uFF0C\u4F1A\u8C03\u7528\u5B9E\u4F8B\u7684<code>_setter</code>\u51FD\u6570\u3002</p><p>\u5230\u6B64\uFF0C\u4F60\u4F1A\u53D1\u73B0<code>computed</code>\u662F\u61D2\u60F0\u7684\uFF0C\u53EA\u6709\u4F7F\u7528\u5230<code>computed</code>\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u624D\u80FD\u89E6\u53D1\u76F8\u5173\u8BA1\u7B97\u3002</p><p>\u4E3A\u4E86\u52A0\u6DF1\u5BF9<code>computed</code>\u7684\u7406\u89E3\uFF0C\u63A5\u4E0B\u6765\u4EE5\u4E00\u4E2A\u4F8B\u5B50\u5206\u6790<code>computed</code>\u7684\u7F13\u5B58\u53CA\u8BA1\u7B97\u8FC7\u7A0B\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> cValue <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span>

value<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F53\u6253\u5370<code>cValue.value</code>\u65F6\uFF0C\u4F1A\u547D\u4E2D<code>ComputedRefImpl</code>\u5BF9\u5E94\u7684<code>get</code>\u65B9\u6CD5\uFF0C\u5728<code>get</code>\u4E2D\uFF0C\u6267\u884C<code>trackRefValue</code>\u6536\u96C6\u5BF9\u5E94\u4F9D\u8D56\uFF08\u7531\u4E8E\u6B64\u65F6\u6CA1\u6709\u5904\u4E8E\u6D3B\u8DC3\u72B6\u6001\u7684<code>effect</code>\uFF0C\u5373<code>activeEffect</code>\uFF0C\u6240\u4EE5\u5E76\u4E0D\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\uFF09\uFF0C\u9ED8\u8BA4<code>_dirty</code>\u4E3A<code>true</code>\uFF0C\u5C06<code>_dirty</code>\u8BBE\u7F6E\u4E3A<code>false</code>\uFF0C\u5E76\u6267\u884C<code>effect.run</code>\uFF0C\u8BA1\u7B97\u6570\u636E\uFF0C\u8BA1\u7B97\u5B8C\u6210\u540E\u5C06\u6570\u636E\u7F13\u5B58\u81F3<code>selft._vlaue</code>\u4E2D\uFF0C\u65B9\u4FBF\u4E0B\u6B21\u7684\u5229\u7528\u3002\u5728\u8C03\u7528<code>effect.run</code>\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u5C06\u5728<code>ComputedRefImpl</code>\u6784\u9020\u5668\u4E2D\u521B\u5EFA\u7684<code>ReactiveEffect</code>\u5B9E\u4F8B\u6536\u96C6\u5230<code>targetMap[toRaw(value)].foo</code>\u4E2D\u3002</p><p>\u5F53\u4FEE\u6539<code>value.foo = 2</code>\uFF0C\u89E6\u53D1<code>targetMap[toRaw(value)].foo</code>\u4E2D\u7684\u4F9D\u8D56\uFF0C\u7531\u4E8E\u5728\u521D\u59CB\u5316<code>ReactiveEffect</code>\u65F6\uFF0C\u8BBE\u7F6E\u4E86\u4E00\u4E2A\u8C03\u5EA6\u5668\uFF0C\u6240\u4EE5\u5728\u89E6\u53D1\u4F9D\u8D56\u8FC7\u7A0B\u4E2D\u4F1A\u6267\u884C\u8FD9\u4E2A\u8C03\u5EA6\u5668\u3002\u8FD9\u4E2A\u8C03\u5EA6\u5668\u4E2D\u4F1A\u5224\u65AD\u5982\u679C<code>_dirty===false</code>\uFF0C\u5219\u5C06<code>_dirty</code>\u8BBE\u7F6E\u4E3A<code>true</code>\uFF0C\u5E76\u624B\u52A8\u8C03\u7528<code>triggerRefValue</code>\u89E6\u53D1\u4F9D\u8D56\uFF0C\u5728\u8C03\u7528<code>triggerRefValue</code>\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u56E0\u4E3A<code>cValue.dep=undefined</code>\uFF0C\u6240\u4EE5\u6CA1\u6709\u4F9D\u8D56\u8981\u89E6\u53D1\u3002</p><p>\u5F53\u7B2C\u4E8C\u6B21\u6253\u5370<code>cValue.value</code>\u65F6\uFF0C\u7531\u4E8E<code>_dirty</code>\u4E3A<code>true</code>\uFF0C\u6240\u4EE5\u4F1A\u6267\u884C<code>cValue.effect.run</code>\uFF0C\u5E76\u5C06\u7ED3\u679C\u8D4B\u503C\u7ED9<code>cValue._value</code>\uFF0C\u6700\u540E\u8FD4\u56DE<code>cValue._value</code>\uFF0C\u6253\u5370\u7ED3\u679C<code>2</code></p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p><code>computed</code>\u672C\u8D28\u4E5F\u662F\u4E2A<code>ref</code>\uFF08<code>ComputedRefImpl</code>\uFF09\uFF0C\u5B83\u662F\u61D2\u60F0\u7684\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\uFF0C\u90A3\u4E48\u662F\u4E0D\u4F1A\u8FDB\u884C\u8BA1\u7B97\u7684\uFF0C\u53EA\u6709\u4F7F\u7528\u5B83\uFF0C\u624D\u4F1A\u8C03\u7528\u8BA1\u7B97\u5C5E\u6027\u4E2D\u7684<code>effect.run</code>\u65B9\u6CD5\u8FDB\u884C\u8BA1\u7B97\uFF0C\u540C\u65F6\u5C06\u7ED3\u679C\u7F13\u5B58\u5230<code>_value</code>\u4E2D\u3002</p><p><code>computed</code>\u5982\u4F55\u91CD\u65B0\u8BA1\u7B97\uFF1F</p><p>\u9996\u5148\u5728\u7B2C\u4E00\u6B21\u83B7\u53D6\u8BA1\u7B97\u5C5E\u6027\u7684\u503C\u7684\u8FC7\u7A0B\u4E2D\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\uFF0C\u5047\u8BBE\u8BA1\u7B97\u5C5E\u6027\u7684\u8BA1\u7B97\u4E0E\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684a\u3001b\u4E24\u4E2A\u5C5E\u6027\u6709\u5173\uFF0C\u90A3\u4E48\u4F1A\u5C06<code>computed</code>\u4E2D\u751F\u6210\u7684<code>ReactiveEffect</code>\u5B9E\u4F8B\u6536\u96C6\u5230<code>targetMap[obj].a</code>\u3001<code>targetMap[obj].b</code>\u4E2D\uFF0C\u4E00\u65E6<code>a</code>\u6216<code>b</code>\u5C5E\u6027\u53D8\u5316\u4E86\uFF0C\u4F1A\u89E6\u53D1\u4F9D\u8D56\uFF0C\u800C\u5728\u4F9D\u8D56\u7684\u89E6\u53D1\u8FC7\u7A0B\u4E2D\u4F1A\u6267\u884C\u8C03\u5EA6\u51FD\u6570\uFF0C\u5728\u8C03\u5EA6\u51FD\u6570\u4E2D\u4F1A\u4F1A\u5C06\u810F\u6570\u636E\u7684\u6807\u8BC6<code>_dirty</code>\u8BBE\u7F6E\u4E3A<code>true</code>\uFF0C\u5E76\u89E6\u53D1\u8BA1\u7B97\u5C5E\u6027\u7684\u4F9D\u8D56\u3002\u90A3\u4E48\u5728\u4E0B\u4E00\u6B21\u4F7F\u7528\u5230\u8BA1\u7B97\u5C5E\u6027\u7684\u8BDD\uFF0C\u7531\u4E8E<code>_dirty</code>\u4E3A<code>true</code>\uFF0C\u4FBF\u4F1A\u8C03\u7528\u8BA1\u7B97\u5C5E\u6027\u4E2D\u7684<code>effect.run</code>\u65B9\u6CD5\u91CD\u65B0\u8BA1\u7B97\u503C\u3002</p>`,46),o=[t];function c(l,u,r,i,k,d){return a(),s("div",null,o)}var f=n(e,[["render",c]]);export{m as __pageData,f as default};
