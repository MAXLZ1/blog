import{_ as n,c as s,o as a,d as p}from"./app.a6de7e81.js";const m='{"title":"\u5168\u5C40\u5BFC\u822A\u5B88\u536B","description":"","frontmatter":{},"headers":[],"relativePath":"vue-router/\u5168\u5C40\u5BFC\u822A\u5B88\u536B.md"}',e={},t=p(`<h1 id="\u5168\u5C40\u5BFC\u822A\u5B88\u536B" tabindex="-1">\u5168\u5C40\u5BFC\u822A\u5B88\u536B <a class="header-anchor" href="#\u5168\u5C40\u5BFC\u822A\u5B88\u536B" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5168\u5C40\u5BFC\u822A\u5B88\u536B\u6709\u4E09\u79CD\uFF1A</p><p><code>beforeEach</code>\uFF1A\u5728\u4EFB\u4F55\u5BFC\u822A\u4E4B\u524D\u6267\u884C\u3002\u8FD4\u56DE\u4E00\u4E2A\u5220\u9664\u5DF2\u6CE8\u518C\u5BFC\u822A\u5B88\u536B\u7684\u51FD\u6570\u3002</p><p><code>beforeResolve</code>\uFF1A\u5728\u5BFC\u822A\u89E3\u6790\u4E4B\u524D\u6267\u884C\u3002\u8FD4\u56DE\u4E00\u4E2A\u5220\u9664\u5DF2\u6CE8\u518C\u5BFC\u822A\u5B88\u536B\u7684\u51FD\u6570\u3002</p><p><code>afterEach</code>\uFF1A\u5728\u4EFB\u4F55\u5BFC\u822A\u4E4B\u540E\u6267\u884C\u3002\u8FD4\u56DE\u4E00\u4E2A\u5220\u9664\u5DF2\u6CE8\u518C\u5BFC\u822A\u5B88\u536B\u7684\u51FD\u6570\u3002</p></div><p>\u5168\u5C40\u5BFC\u822A\u5B88\u536B\u548C<code>onError</code>\u7684\u5B9E\u73B0\u90FD\u662F\u901A\u8FC7\u7EF4\u62A4\u4E00\u4E2A\u6570\u7EC4\u8FDB\u884C\u5B9E\u73B0\u3002\u5728<code>vue-router</code>\u4E2D\u901A\u8FC7\u4E00\u4E2A<code>useCallbacks</code>\u7684\u51FD\u6570\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u53EF\u4EE5\u91CD\u7F6E\u7684\u5217\u8868\uFF0C\u5168\u5C40\u94A9\u5B50\u53CA<code>onError</code>\u5C31\u662F\u901A\u8FC7<code>useCallbacks</code>\u5B9E\u73B0\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> beforeGuards <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useCallbacks</span><span class="token generic class-name"><span class="token operator">&lt;</span>NavigationGuardWithThis<span class="token operator">&lt;</span><span class="token keyword">undefined</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> beforeResolveGuards <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useCallbacks</span><span class="token generic class-name"><span class="token operator">&lt;</span>NavigationGuardWithThis<span class="token operator">&lt;</span><span class="token keyword">undefined</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> afterGuards <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useCallbacks</span><span class="token generic class-name"><span class="token operator">&lt;</span>NavigationHookAfter<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> errorHandlers <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useCallbacks</span><span class="token generic class-name"><span class="token operator">&lt;</span>_ErrorHandler<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  beforeEach<span class="token operator">:</span> beforeGuards<span class="token punctuation">.</span>add<span class="token punctuation">,</span>
  beforeResolve<span class="token operator">:</span> beforeResolveGuards<span class="token punctuation">.</span>add<span class="token punctuation">,</span>
  afterEach<span class="token operator">:</span> afterGuards<span class="token punctuation">.</span>add<span class="token punctuation">,</span>
  onError<span class="token operator">:</span> errorHandlers<span class="token punctuation">.</span>add<span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>useCallbacks</code>:</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useCallbacks</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> handlers<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>handler<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> i <span class="token operator">=</span> handlers<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> handlers<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    add<span class="token punctuation">,</span>
    <span class="token function-variable function">list</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> handlers<span class="token punctuation">,</span>
    reset<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5173\u4E8E\u5168\u5C40\u5BFC\u822A\u5B88\u536B\u7684\u6267\u884C\u65F6\u673A\u53EF\u53C2\u8003\uFF1A<a href="https://maxlz1.github.io/blog/vue-router/push.html" target="_blank" rel="noopener noreferrer">push</a></p>`,7),o=[t];function c(l,r,u,i,k,d){return a(),s("div",null,o)}var f=n(e,[["render",c]]);export{m as __pageData,f as default};
