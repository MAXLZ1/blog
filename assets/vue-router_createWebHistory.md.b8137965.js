import{_ as n,c as s,o as a,d as p}from"./app.b8b247e7.js";const d='{"title":"createWebHistory","description":"","frontmatter":{},"headers":[],"relativePath":"vue-router/createWebHistory.md"}',t={},e=p(`<h1 id="createwebhistory" tabindex="-1">createWebHistory <a class="header-anchor" href="#createwebhistory" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u521B\u5EFA\u4E00\u4E2AHTML5\u5386\u53F2\u3002</p><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>src/history/html5.ts</code></p></div><p><code>createWebHistory()</code>\u63A5\u6536\u4E00\u4E2A<code>base</code>\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u63D0\u4F9B\u4E00\u4E2A\u57FA\u7840\u8DEF\u5F84\u3002</p><p>\u5728<code>createWebHistory()</code>\u5185\u90E8\u9996\u5148\u4F1A\u8FDB\u884C<code>base</code>\u7684\u6807\u51C6\u5316\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code>base <span class="token operator">=</span> <span class="token function">normalizeBase</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><code>normalizeBase</code>\u65B9\u6CD5\u5BF9\u4F20\u5165\u7684<code>base</code>\u8FDB\u884C\u6807\u51C6\u5316\u5904\u7406\u3002\u9996\u5148\u5982\u679C\u6CA1\u6709\u4F20\u5165<code>base</code>\uFF0C\u68C0\u6D4B\u5982\u679C\u662F\u6D4F\u89C8\u5668\u73AF\u5883\uFF0C\u5C31\u53BB\u627E\u6709\u6CA1\u6709<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/base" target="_blank" rel="noopener noreferrer">base</a>\u6807\u7B7E\uFF0C\u5982\u679C\u6709<code>base</code>\u6807\u7B7E\uFF0C\u5C31\u8BA9\u5176<code>href</code>\u5C5E\u6027\u4F5C\u4E3A<code>base</code>\uFF0C\u5982\u679C\u6CA1\u6709<code>href</code>\u5C5E\u6027\uFF0C\u4F7F\u7528<code>/</code>\u4F5C\u4E3A<code>base</code>\u3002\u5982\u679C\u4E0D\u662F\u6D4F\u89C8\u5668\u73AF\u5883\u4E5F\u4F7F\u7528<code>/</code>\u4F5C\u4E3A<code>base</code>\u3002\u6700\u540E\u9700\u8981\u5C06<code>base</code>\u4EE5<code>/</code>\u7ED3\u5C3E\u7684\u90A3\u4E2A<code>/</code>\u5220\u9664\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u4F7F\u7528<code>base+fullpath</code>\u7684\u5F62\u5F0F\u5EFA\u7ACB\u4E00\u4E2A<code>href</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">normalizeBase</span><span class="token punctuation">(</span>base<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709base</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>base<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6D4F\u89C8\u5668\u73AF\u5883\u4E0B\u68C0\u6D4B\u662F\u4E0D\u6709base\u6807\u7B7E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isBrowser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u7528base\u6807\u7B7E\u4F7F\u7528base\u6807\u7B7E\u7684href</span>
      <span class="token keyword">const</span> baseEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;base&#39;</span><span class="token punctuation">)</span>
      base <span class="token operator">=</span> <span class="token punctuation">(</span>baseEl <span class="token operator">&amp;&amp;</span> baseEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;/&#39;</span>
      <span class="token comment">// \u53BB\u9664htttp(s)://xxx/\uFF0C\u5982https://example.com/folder/ --&gt; /folder/</span>
      base <span class="token operator">=</span> base<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\w+:\\/\\/[^\\/]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      base <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// ensure leading slash when it was removed by the regex above avoid leading</span>
  <span class="token comment">// slash with hash because the file could be read from the disk like file://</span>
  <span class="token comment">// and the leading slash would cause problems</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>base<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">&amp;&amp;</span> base<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span> base <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> base

  <span class="token comment">// \u5220\u9664\u6700\u540E\u7684\u659C\u6760\uFF0C\u8FD9\u6837\u53EF\u4EE5\u4F7F\u7528\u4F7F\u7528base + fullPath\u7684\u5F62\u5F0F\u5EFA\u7ACB\u4E00\u4E2Ahref</span>
  <span class="token keyword">return</span> <span class="token function">removeTrailingSlash</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><code>base</code>\u6807\u51C6\u5316\u540E\uFF0C\u4F1A\u58F0\u660E\u4E00\u4E2A<code>historyNavigation</code>\u548C<code>historyListeners</code>\u53D8\u91CF\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> historyNavigation <span class="token operator">=</span> <span class="token function">useHistoryStateNavigation</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
<span class="token keyword">const</span> historyListeners <span class="token operator">=</span> <span class="token function">useHistoryListeners</span><span class="token punctuation">(</span>
  base<span class="token punctuation">,</span>
  historyNavigation<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
  historyNavigation<span class="token punctuation">.</span>location<span class="token punctuation">,</span>
  historyNavigation<span class="token punctuation">.</span>replace
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>useHistoryStateNavigation()</code>\u3001<code>useHistoryListeners()</code>\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u662F\u505A\u4EC0\u4E48\u7684\u5462\uFF1F</p><p>\u5148\u770B<code>useHistoryStateNavigation</code>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u63A5\u6536\u4E00\u4E2A<code>base</code>\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u3002\u8FD9\u4E2A\u5BF9\u8C61\u4E2D\u6709\u56DB\u4E2A\u5C5E\u6027\uFF1A</p><ul><li><code>location</code>\uFF1A\u4E00\u4E2A\u5305\u542B<code>value</code>\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C<code>value</code>\u503C\u662F<code>createCurrentLocation()</code>\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002\u90A3\u4E48\u8FD9\u4E2A<code>value</code>\u662F\u4EC0\u4E48\u5462\uFF1F\u770B\u4E0B<code>createCurrentLocation</code>\u505A\u4E86\u4EC0\u4E48\u3002</li></ul><p><code>createCurrentLocation</code>\u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A<code>base</code>\u5B57\u7B26\u4E32\u548C\u4E00\u4E2A<code>window.location</code>\u5BF9\u8C61</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">createCurrentLocation</span><span class="token punctuation">(</span>
  base<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  location<span class="token operator">:</span> Location
<span class="token punctuation">)</span><span class="token operator">:</span> HistoryLocation <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> pathname<span class="token punctuation">,</span> search<span class="token punctuation">,</span> hash <span class="token punctuation">}</span> <span class="token operator">=</span> location
  <span class="token comment">// allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end</span>
  <span class="token comment">// \u4ECEbase\u4E2D\u83B7\u53D6#\u7684\u7D22\u5F15</span>
  <span class="token keyword">const</span> hashPos <span class="token operator">=</span> base<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679Cbase\u4E2D\u5305\u542B#</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hashPos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> slicePos <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>base<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>hashPos<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token operator">?</span> base<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>hashPos<span class="token punctuation">)</span><span class="token punctuation">.</span>length
      <span class="token operator">:</span> <span class="token number">1</span>
    <span class="token comment">// \u4ECElocation.hash\u4E2D\u83B7\u53D6path</span>
    <span class="token keyword">let</span> pathFromHash <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>slicePos<span class="token punctuation">)</span>
    <span class="token comment">// prepend the starting slash to hash so the url starts with /#</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pathFromHash<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> pathFromHash <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> pathFromHash
    <span class="token comment">// stripBase(pathname, base)\uFF1A\u5C06pathname\u53BB\u9664base\u90E8\u5206</span>
    <span class="token keyword">return</span> <span class="token function">stripBase</span><span class="token punctuation">(</span>pathFromHash<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679Cbase\u4E2D\u4E0D\u5305\u542B#\uFF0C\u628Apathname\u4E2D\u7684base\u90E8\u5206\u5220\u9664</span>
  <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">stripBase</span><span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> base<span class="token punctuation">)</span>
  <span class="token keyword">return</span> path <span class="token operator">+</span> search <span class="token operator">+</span> hash
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230<code>createCurrentLocation</code>\u5176\u5B9E\u5C31\u662F\u83B7\u53D6<code>window.location</code>\u76F8\u5BF9<code>base</code>\u7684<code>location</code>\u3002\u4E3E\u51E0\u4E2A\u4F8B\u5B50\uFF08\u4EE5\u4E0B\u51E0\u4E2A\u4F8B\u5B50\u7684<code>base</code>\u90FD\u7ECF\u8FC7\u6807\u51C6\u5316\uFF09\uFF1A\u5982\u679C<code>window.location.pathname</code>\u4E3A<code>/a/b/c</code>\uFF0C<code>base</code>\u4E3A<code>/a</code>\uFF0C\u90A3\u4E48\u901A\u8FC7<code>createCurrentLocation</code>\u5F97\u5230\u7684<code>location</code>\u4E3A<code>/b/c</code>\uFF1B\u5982\u679C\u662F\u6709<code>hash</code>\u7684\u60C5\u51B5\uFF0C<code>window.location.hash</code>\u4E3A<code>#/a/b/c</code>\uFF0C<code>base</code>\u4E3A<code>#/a</code>\uFF0C\u90A3\u4E48\u901A\u8FC7<code>createCurrentLocation</code>\u5F97\u5230\u7684<code>location</code>\u4E3A<code>/b/c</code>\uFF1B<code>window.location.hash</code>\u4E3A<code>#/a/b/c</code>\uFF0C<code>base</code>\u4E3A<code>#</code>\uFF0C\u90A3\u4E48\u901A\u8FC7<code>createCurrentLocation</code>\u5F97\u5230\u7684<code>location</code>\u4E3A<code>/a/b/c</code>\u3002</p><ul><li><code>state</code>\uFF1A\u4E00\u4E2A\u5305\u542B<code>value</code>\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C<code>value</code>\u5B58\u50A8\u7684\u662F\u5F53\u524D\u7684<code>history.state</code></li><li><code>push</code>\uFF1A\u5411\u5386\u53F2\u8BB0\u5F55\u4E2D\u6DFB\u52A0\u4E00\u6761\u8BB0\u5F55\u3002\u5728<code>push</code>\u8FC7\u7A0B\u4E2D\u4F60\u4F1A\u53D1\u73B0\u8C03\u7528\u4E86\u4E24\u6B21<code>changeLocation</code>\uFF0C\u5728\u7B2C\u4E00\u6B21\u8C03\u7528<code>changeLocation</code>\u65F6\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u8BB0\u5F55\u5F53\u524D\u9875\u9762\u5728\u7684\u6EDA\u52A8\u4F4D\u7F6E\uFF0C\u5982\u679C\u4F7F\u7528<code>history.back()</code>\u6216\u6D4F\u89C8\u5668\u56DE\u9000/\u524D\u8FDB\u6309\u94AE\u56DE\u5230\u8FD9\u4E2A\u9875\u9762\uFF0C\u9875\u9762\u4F1A\u6EDA\u52A8\u5230\u5BF9\u5E94\u4F4D\u7F6E\uFF0C\u4E3A\u4E86\u4E0D\u518D\u5386\u53F2\u6808\u4E2D\u4FDD\u5B58\u65B0\u7684\u8BB0\u5F55\uFF0C\u7B2C\u4E00\u6B21\u8BB0\u5F55\u4F7F\u7528\u7684<code>reaplceState</code>\u66FF\u6362\u5F53\u524D\u5386\u53F2\u8BB0\u5F55\u3002\u7B2C\u4E8C\u6B21\u8C03\u7528<code>changeLocation</code>\u662F\u4F1A\u8DF3\u8F6C\u5230\u9700\u8981\u8DF3\u8F6C\u7684\u4F4D\u7F6E\u3002</li><li><code>reaplce</code>\uFF1A\u66FF\u6362\u5F53\u524D\u5386\u53F2\u8BB0\u5F55</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">useHistoryStateNavigation</span><span class="token punctuation">(</span>base<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> history<span class="token punctuation">,</span> location <span class="token punctuation">}</span> <span class="token operator">=</span> window

  <span class="token keyword">const</span> currentLocation<span class="token operator">:</span> ValueContainer<span class="token operator">&lt;</span>HistoryLocation<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    value<span class="token operator">:</span> <span class="token function">createCurrentLocation</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> historyState<span class="token operator">:</span> ValueContainer<span class="token operator">&lt;</span>StateEntry<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> history<span class="token punctuation">.</span>state <span class="token punctuation">}</span>
  
  <span class="token comment">// \u5982\u679ChistoryState.value\u662F\u7A7A\u7684.\u6784\u5EFA\u5F53\u524D\u5386\u53F2\u6761\u76EE\uFF0C\u4E00\u4E2A\u5168\u65B0\u7684\u5BFC\u822A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>historyState<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6539\u53D8location\uFF0C\u6784\u5EFA\u4E00\u6761\u65B0\u7684\u5386\u53F2\u8BB0\u5F55</span>
    <span class="token function">changeLocation</span><span class="token punctuation">(</span>
      currentLocation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        back<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        current<span class="token operator">:</span> currentLocation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        forward<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token comment">// \u66FF\u6362\u5F53\u524D\u8DEF\u7531\u5386\u53F2\u8BB0\u5F55\u4E2D\u7684\u6700\u540E\u4E00\u6761\u8BB0\u5F55</span>
        position<span class="token operator">:</span> history<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
        replaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        scroll<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// \u4F7F\u7528replace</span>
      <span class="token boolean">true</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4FEE\u6539\u5386\u53F2\u8BB0\u5F55</span>
  <span class="token keyword">function</span> <span class="token function">changeLocation</span><span class="token punctuation">(</span>
    to<span class="token operator">:</span> HistoryLocation<span class="token punctuation">,</span>
    state<span class="token operator">:</span> StateEntry<span class="token punctuation">,</span>
    replace<span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token comment">// #\u5728base\u4E2D\u7684\u7D22\u5F15\u4F4D\u7F6E</span>
    <span class="token keyword">const</span> hashIndex <span class="token operator">=</span> base<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span>
    
    <span class="token comment">// \u786E\u5B9Aurl</span>
    <span class="token comment">// \u5982\u679Cbase\u4E2D\u6709#\uFF1A\u4E24\u79CD\u60C5\u51B5\uFF1A\u4E00\u3001\u5B58\u5728location.host\u548Cbase\u6807\u7B7E\uFF0Curl\u5C31\u662Fbase\uFF1B\u4E8C\u3001\u4E0D\u7B26\u5408\u4E00\u7684\u60C5\u51B5\uFF0Curl\u5C31\u662Fbase.slice(hashIndex)) + to</span>
    <span class="token comment">// \u5982\u679Cbase\u4E2D\u6CA1\u6709#\uFF1Aurl = createBaseLocation() + base + to  createBaseLocation() = location.protocol + &#39;//&#39; + location.host</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span>
      hashIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token operator">?</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span>host <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;base&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">?</span> base
            <span class="token operator">:</span> base<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>hashIndex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> to
        <span class="token operator">:</span> <span class="token function">createBaseLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> base <span class="token operator">+</span> to
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4FEE\u6539\u5386\u53F2\u8BB0\u5F55</span>
      history<span class="token punctuation">[</span>replace <span class="token operator">?</span> <span class="token string">&#39;replaceState&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;pushState&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>
      <span class="token comment">// historyState\u66F4\u65B0\u4E3A\u6700\u65B0\u7684\u5386\u53F2\u8BB0\u5F55</span>
      historyState<span class="token punctuation">.</span>value <span class="token operator">=</span> state
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Error with push/replace State&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      location<span class="token punctuation">[</span>replace <span class="token operator">?</span> <span class="token string">&#39;replace&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;assign&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">replace</span><span class="token punctuation">(</span>to<span class="token operator">:</span> HistoryLocation<span class="token punctuation">,</span> data<span class="token operator">?</span><span class="token operator">:</span> HistoryState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8981\u66FF\u6362\u7684state</span>
    <span class="token keyword">const</span> state<span class="token operator">:</span> StateEntry <span class="token operator">=</span> <span class="token function">assign</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      history<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
      <span class="token function">buildState</span><span class="token punctuation">(</span>
        historyState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>back<span class="token punctuation">,</span>
        to<span class="token punctuation">,</span>
        historyState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>forward<span class="token punctuation">,</span>
        <span class="token boolean">true</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
      <span class="token comment">// \u56E0\u4E3A\u662Freplace\u64CD\u4F5C\uFF0C\u6240\u4EE5position\u4E0D\u53D8</span>
      <span class="token punctuation">{</span> position<span class="token operator">:</span> historyState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>position <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>

    <span class="token function">changeLocation</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    currentLocation<span class="token punctuation">.</span>value <span class="token operator">=</span> to
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>to<span class="token operator">:</span> HistoryLocation<span class="token punctuation">,</span> data<span class="token operator">?</span><span class="token operator">:</span> HistoryState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> currentState <span class="token operator">=</span> <span class="token function">assign</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      historyState<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      history<span class="token punctuation">.</span>state <span class="token keyword">as</span> Partial<span class="token operator">&lt;</span>StateEntry<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        forward<span class="token operator">:</span> to<span class="token punctuation">,</span>
        scroll<span class="token operator">:</span> <span class="token function">computeScrollPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>history<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">history.replaceState(history.state, &#39;&#39;, url)\\n\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7B2C\u4E00\u6B21changeLocation\uFF0C\u4F7F\u7528replace\u5237\u65B0\u5F53\u524D\u5386\u53F2\uFF0C\u76EE\u7684\u662F\u8BB0\u5F55\u5F53\u524D\u9875\u9762\u7684\u6EDA\u52A8\u4F4D\u7F6E</span>
    <span class="token function">changeLocation</span><span class="token punctuation">(</span>currentState<span class="token punctuation">.</span>current<span class="token punctuation">,</span> currentState<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> state<span class="token operator">:</span> StateEntry <span class="token operator">=</span> <span class="token function">assign</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">buildState</span><span class="token punctuation">(</span>currentLocation<span class="token punctuation">.</span>value<span class="token punctuation">,</span> to<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// push\u64CD\u4F5C\uFF0C\u5386\u53F2\u8BB0\u5F55\u7684position+1</span>
      <span class="token punctuation">{</span> position<span class="token operator">:</span> currentState<span class="token punctuation">.</span>position <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      data
    <span class="token punctuation">)</span>
    <span class="token comment">// \u7B2C\u4E8C\u6B21\u8DF3\u8F6C\uFF0C\u8DF3\u8F6C\u5230\u9700\u8981\u8DF3\u8F6C\u7684\u4F4D\u7F6E</span>
    <span class="token function">changeLocation</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    currentLocation<span class="token punctuation">.</span>value <span class="token operator">=</span> to
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    location<span class="token operator">:</span> currentLocation<span class="token punctuation">,</span>
    state<span class="token operator">:</span> historyState<span class="token punctuation">,</span>
    push<span class="token punctuation">,</span>
    replace<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br></div></div><p><code>useHistoryListeners</code>\u65B9\u6CD5\u540C\u6837\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u4E2D\u5305\u542B\u4E09\u4E2A\u5C5E\u6027\uFF1A</p><ul><li><code>pauseListeners</code>\uFF1A\u4E00\u4E2A\u6682\u505C\u76D1\u542C\u51FD\u6570\u3002</li><li><code>listen</code>\uFF1A\u63A5\u6536\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u8BE5\u56DE\u8C03\u51FD\u6570\u4F1A\u88AB\u52A0\u5165<code>listeners</code>\u6570\u7EC4\u4E2D\uFF0C\u5E76\u5411<code>teardowns</code>\u6570\u7EC4\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u5378\u8F7D\u51FD\u6570</li><li><code>destroy</code>\uFF1A\u9500\u6BC1\u51FD\u6570\uFF0C\u6E05\u7A7A<code>listeners</code>\u4E0E<code>teardowns</code>\uFF0C\u79FB\u9664\u4E00\u4E9B\u76D1\u542C\u51FD\u6570</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">useHistoryListeners</span><span class="token punctuation">(</span>
  base<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  historyState<span class="token operator">:</span> ValueContainer<span class="token operator">&lt;</span>StateEntry<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  currentLocation<span class="token operator">:</span> ValueContainer<span class="token operator">&lt;</span>HistoryLocation<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  replace<span class="token operator">:</span> RouterHistory<span class="token punctuation">[</span><span class="token string">&#39;replace&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> listeners<span class="token operator">:</span> NavigationCallback<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> teardowns<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// TODO: should it be a stack? a Dict. Check if the popstate listener</span>
  <span class="token comment">// can trigger twice</span>
  <span class="token keyword">let</span> pauseState<span class="token operator">:</span> HistoryLocation <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token keyword">const</span> popStateHandler<span class="token operator">:</span> <span class="token function-variable function">PopStateListener</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
   state<span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    state<span class="token operator">:</span> StateEntry <span class="token operator">|</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> to <span class="token operator">=</span> <span class="token function">createCurrentLocation</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> location<span class="token punctuation">)</span>
    <span class="token keyword">const</span> from<span class="token operator">:</span> HistoryLocation <span class="token operator">=</span> currentLocation<span class="token punctuation">.</span>value
    <span class="token keyword">const</span> fromState<span class="token operator">:</span> StateEntry <span class="token operator">=</span> historyState<span class="token punctuation">.</span>value
    <span class="token keyword">let</span> delta <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentLocation<span class="token punctuation">.</span>value <span class="token operator">=</span> to
      historyState<span class="token punctuation">.</span>value <span class="token operator">=</span> state

      <span class="token comment">// \u5982\u679C\u6682\u505C\u76D1\u542C\u4E86\uFF0C\u5219\u76F4\u63A5return\uFF0C\u540C\u65F6pauseState\u8D4B\u4E3Anull</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>pauseState <span class="token operator">&amp;&amp;</span> pauseState <span class="token operator">===</span> from<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pauseState <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8BA1\u7B97\u79FB\u52A8\u6B65\u6570</span>
      delta <span class="token operator">=</span> fromState <span class="token operator">?</span> state<span class="token punctuation">.</span>position <span class="token operator">-</span> fromState<span class="token punctuation">.</span>position <span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">replace</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6267\u884C\u76D1\u542C\u51FD\u6570\u5217\u8868</span>
    listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>listener <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">listener</span><span class="token punctuation">(</span>currentLocation<span class="token punctuation">.</span>value<span class="token punctuation">,</span> from<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        delta<span class="token punctuation">,</span>
        type<span class="token operator">:</span> NavigationType<span class="token punctuation">.</span>pop<span class="token punctuation">,</span>
        direction<span class="token operator">:</span> delta
          <span class="token operator">?</span> delta <span class="token operator">&gt;</span> <span class="token number">0</span>
            <span class="token operator">?</span> NavigationDirection<span class="token punctuation">.</span>forward
            <span class="token operator">:</span> NavigationDirection<span class="token punctuation">.</span>back
          <span class="token operator">:</span> NavigationDirection<span class="token punctuation">.</span><span class="token builtin">unknown</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">function</span> <span class="token function">pauseListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pauseState <span class="token operator">=</span> currentLocation<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">listen</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> NavigationCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// setup the listener and prepare teardown callbacks</span>
    listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>

    <span class="token comment">// \u5378\u8F7D\u51FD\u6570</span>
    <span class="token keyword">const</span> <span class="token function-variable function">teardown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    teardowns<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>teardown<span class="token punctuation">)</span>
    <span class="token keyword">return</span> teardown
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">beforeUnloadListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> history <span class="token punctuation">}</span> <span class="token operator">=</span> window
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>history<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token comment">// \u5F53\u9875\u9762\u5173\u95ED\u65F6\u8BB0\u5F55\u9875\u9762\u6EDA\u52A8\u4F4D\u7F6E</span>
    history<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span>
      <span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> history<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> scroll<span class="token operator">:</span> <span class="token function">computeScrollPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u79FB\u9664\u76D1\u542C\u51FD\u6570</span>
  <span class="token keyword">function</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> teardown <span class="token keyword">of</span> teardowns<span class="token punctuation">)</span> <span class="token function">teardown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    teardowns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span> popStateHandler<span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> beforeUnloadListener<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6CE8\u518C\u76D1\u542C\u51FD\u6570</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span> popStateHandler<span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> beforeUnloadListener<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    pauseListeners<span class="token punctuation">,</span>
    listen<span class="token punctuation">,</span>
    destroy<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br></div></div><p>\u521B\u5EFA\u5B8C<code>historyNavigation</code>\u3001<code>historyListeners</code>\u4E4B\u540E\uFF0C\u7D27\u8DDF\u7740\u58F0\u660E\u4E00\u4E2A<code>go</code>\u51FD\u6570\u3002\u8BE5\u51FD\u6570\u63A5\u6536\u4E24\u4E2A\u53D8\u91CF\uFF1A<code>delta</code>\u5386\u53F2\u8BB0\u5F55\u79FB\u52A8\u7684\u6B65\u6570\uFF0C<code>triggerListeners</code>\u662F\u5426\u89E6\u53D1\u76D1\u542C</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">go</span><span class="token punctuation">(</span>delta<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> triggerListeners <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>triggerListeners<span class="token punctuation">)</span> historyListeners<span class="token punctuation">.</span><span class="token function">pauseListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E4B\u540E\u521B\u5EFA\u4E00\u4E2A<code>routerHistory</code>\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u8FD4\u56DE\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> routerHistory<span class="token operator">:</span> RouterHistory <span class="token operator">=</span> <span class="token function">assign</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    location<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    base<span class="token punctuation">,</span>
    go<span class="token punctuation">,</span>
    createHref<span class="token operator">:</span> <span class="token function">createHref</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> base<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  historyNavigation<span class="token punctuation">,</span>
  historyListeners
<span class="token punctuation">)</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>routerHistory<span class="token punctuation">,</span> <span class="token string">&#39;location&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> historyNavigation<span class="token punctuation">.</span>location<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>routerHistory<span class="token punctuation">,</span> <span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> historyNavigation<span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">return</span> routerHistory
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,24),o=[e];function c(l,r,u,i,k,b){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
