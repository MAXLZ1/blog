import{_ as n,c as s,o as a,d as p}from"./app.3dc7eb55.js";var t="/blog/assets/reactive.e6eef384.png";const y='{"title":"reactive","description":"","frontmatter":{},"headers":[{"level":3,"title":"mutableHandlers","slug":"mutablehandlers"},{"level":3,"title":"mutableCollectionHandlers","slug":"mutablecollectionhandlers"}],"relativePath":"vue3-analysis/reactive/reactive.md"}',e={},o=p(`<h1 id="reactive" tabindex="-1">reactive <a class="header-anchor" href="#reactive" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>reactive</code>\u6240\u5728\u6A21\u5757\u4E3A\u54CD\u5E94\u5F0F\u6A21\u5757<code>reactivity</code></p><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/reactivity/src/reactive.ts</code></p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>\u901A\u8FC7<code>reactive</code>\u53EF\u4EE5\u58F0\u660E\u4E00\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\u3002\u4E3B\u8981\u901A\u8FC7<code>proxy</code>\u8FDB\u884C\u61D2\u60F0\u5F0F\u5F97\u5904\u7406\u3002</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>\u6CE8\u610F\u5982\u679C<code>reactive</code>\u7684<code>object</code>\uFF0C\u6307\u5B9A\u4E86<code>__v_skip:true</code>\u5C5E\u6027\uFF08<code>markRaw(target)</code>\u5C31\u662F\u901A\u8FC7\u8FD9\u79CD\u65B9\u6CD5\u6307\u5B9A<code>target</code>\u6C38\u8FDC\u4E0D\u80FD\u8F6C\u4E3A<code>proxy</code>\uFF09\u6216<code>object</code>\u672C\u8EAB\u4E0D\u53EF\u88AB\u6269\u5C55\uFF0C\u90A3\u4E48<code>object</code>\u4E0D\u80FD\u88AB\u4EE3\u7406</p></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  __v_skip<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// \u6807\u8BB0original\u4E0D\u9700\u8981\u4EE3\u7406</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> observed <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>original <span class="token operator">===</span> observed<span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token keyword">const</span> freezeObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> observed2 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>freezeObj <span class="token operator">===</span> observed2<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>reactive</code>\u6D41\u7A0B\u56FE\uFF1A <img src="`+t+`" alt=""></p><p><code>reactive</code>\u6E90\u7801\uFF0C\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/reactivity/src/reactive.ts</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679Ctarget\u662F\u4E2A\u53EA\u8BFB\u7684\u4EE3\u7406\u5BF9\u8C61\u76F4\u63A5\u5C06\u5176\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReadonly</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token comment">// </span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>
    target<span class="token punctuation">,</span>
    <span class="token boolean">false</span><span class="token punctuation">,</span>
    mutableHandlers<span class="token punctuation">,</span>
    mutableCollectionHandlers<span class="token punctuation">,</span>
    reactiveMap
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> Target<span class="token punctuation">,</span>
  isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  baseHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  collectionHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  proxyMap<span class="token operator">:</span> WeakMap<span class="token operator">&lt;</span>Target<span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5148\u68C0\u67E5target\u662F\u5426\u4E3A\u4E00\u4E2A\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">value cannot be made reactive: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token comment">// target is already a Proxy, return it.</span>
  <span class="token comment">// exception: calling readonly() on a reactive object</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token punctuation">(</span>isReadonly <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token comment">// target already has corresponding Proxy</span>
  <span class="token comment">// \u5C1D\u8BD5\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u4EE3\u7406\u5BF9\u8C61</span>
  <span class="token keyword">const</span> existingProxy <span class="token operator">=</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>existingProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> existingProxy
  <span class="token punctuation">}</span>
  <span class="token comment">// only a whitelist of value types can be observed.</span>
  <span class="token comment">// \u5224\u65ADtaget\u662F\u5426\u5141\u8BB8\u88AB\u4EE3\u7406</span>
  <span class="token keyword">const</span> targetType <span class="token operator">=</span> <span class="token function">getTargetType</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">INVALID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  
  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
    target<span class="token punctuation">,</span>
    targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">COLLECTION</span> <span class="token operator">?</span> collectionHandlers <span class="token operator">:</span> baseHandlers
  <span class="token punctuation">)</span>
  proxyMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token keyword">return</span> proxy
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p><code>reactive</code>\u63A5\u6536\u4E00\u4E2A<code>target</code>\u5BF9\u8C61\u3002\u9996\u5148\u4F1A\u5BF9<code>target</code>\u8FDB\u884C\u5224\u65AD\uFF0C\u5982\u679C<code>target</code>\u662F\u4E2A\u53EA\u8BFB\u7684\u4EE3\u7406\u5BF9\u8C61\uFF0C\u76F4\u63A5\u5C06\u5176\u8FD4\u56DE\u3002\u518D\u68C0\u67E5<code>target</code>\u662F\u4E0D\u662F<code>object</code>\uFF0C\u5982\u679C\u4E0D\u662F<code>object</code>\uFF0C\u8FD4\u56DE<code>target</code>\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>reactive</code>\u53EA\u6709\u63A5\u6536\u5BF9\u8C61\u624D\u4F1A\u5BF9\u5176\u8FDB\u884C\u4EE3\u7406\u3002</p><p>\u5728\u8FDB\u884C\u4EE3\u7406\u4E4B\u524D\uFF0C\u4F1A\u5148\u5C1D\u8BD5\u4ECE\u7F13\u5B58\uFF08<code>proxyMap</code>\u4E00\u4E2A<code>WeakMap</code>\u5B9E\u4F8B\uFF09\u4E2D\u83B7\u53D6\u4EE3\u7406\u5BF9\u8C61\uFF0C\u5982\u679C\u7F13\u5B58\u4E2D\u6709\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7F13\u5B58\u4E2D\u7684\u4EE3\u7406\u5BF9\u8C61\uFF0C\u6CA1\u6709\u518D\u7EE7\u7EED\u5224\u65AD<code>target</code>\u7684\u7C7B\u578B\uFF0C\u901A\u8FC7<code>target</code>\u7684\u7C7B\u578B\u5224\u65AD<code>target</code>\u662F\u4E0D\u662F\u53EF\u4EE5\u88AB\u4EE3\u7406\u3002</p><p>\u901A\u8FC7<code>getTargetType</code>\u5224\u65AD<code>target</code>\u7684\u7C7B\u578B\u3002<code>getTargetType</code>\u53EF\u80FD\u6709\u4E09\u79CD\u8FD4\u56DE\u7ED3\u679C\uFF1A<code>TargetType.INVALID</code>\u3001<code>TargetType.COMMON</code>\u3001<code>TargetType.COLLECTION</code></p><ul><li><code>TargetType.INVALID</code>\uFF1A\u4EE3\u8868<code>target</code>\u4E0D\u80FD\u88AB\u4EE3\u7406</li><li><code>TargetType.COMMON</code>\uFF1A\u4EE3\u8868<code>target</code>\u662F<code>Array</code>\u6216<code>Object</code></li><li><code>TargetType.COLLECTION</code>\uFF1A\u4EE3\u8868<code>target</code>\u662F<code>Map</code>\u3001<code>Set</code>\u3001<code>WeakMap</code>\u3001<code>WeakSet</code></li></ul><p><code>target</code>\u4E0D\u80FD\u88AB\u4EE3\u7406\u7684\u60C5\u51B5\u6709\u4E09\u79CD\uFF1A</p><ol><li>\u663E\u793A\u58F0\u660E\u5BF9\u8C61\u4E0D\u53EF\u88AB\u4EE3\u7406\uFF1A\u901A\u8FC7\u4E2A\u5BF9\u8C61\u6DFB\u52A0<code>__v_skip: true</code>\u5C5E\u6027</li><li>\u5BF9\u8C61\u4E3A\u4E0D\u53EF\u6269\u5C55\u5BF9\u8C61\uFF1A\u5982\u901A\u8FC7<code>Object.freeze</code>\u3001<code>Object.seal</code>\u3001<code>Object.preventExtensions</code>\u7684\u5BF9\u8C61</li><li>\u9664\u4E86<code>Object</code>\u3001<code>Array</code>\u3001<code>Map</code>\u3001<code>Set</code>\u3001<code>WeakMap</code>\u3001<code>WeakSet</code>\u4E4B\u5916\u7684\u5176\u4ED6\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5982<code>Date</code>\u3001<code>RegExp</code>\u3001<code>Promise</code>\u7B49</li></ol><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> <span class="token keyword">enum</span> TargetType <span class="token punctuation">{</span>
  <span class="token constant">INVALID</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token constant">COMMON</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">COLLECTION</span> <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> objectToString <span class="token operator">=</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString
<span class="token keyword">export</span> <span class="token keyword">const</span> toTypeString <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span>
  <span class="token function">objectToString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> toRawType <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// extract &quot;RawType&quot; from strings like &quot;[object RawType]&quot;</span>
  <span class="token keyword">return</span> <span class="token function">toTypeString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">targetTypeMap</span><span class="token punctuation">(</span>rawType<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>rawType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;Object&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;Array&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> TargetType<span class="token punctuation">.</span><span class="token constant">COMMON</span>
    <span class="token keyword">case</span> <span class="token string">&#39;Map&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;Set&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;WeakMap&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;WeakSet&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> TargetType<span class="token punctuation">.</span><span class="token constant">COLLECTION</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> TargetType<span class="token punctuation">.</span><span class="token constant">INVALID</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getTargetType</span><span class="token punctuation">(</span>value<span class="token operator">:</span> Target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6807\u8BB0value\u4E0D\u7528\u88AB\u4EE3\u7406\u6216value\u4E0D\u53EF\u88AB\u6269\u5C55\uFF08Object.seal\u3001Object.freeze\u3001Object.preventExtensions\u53EF\u5C06\u4E00\u4E2A\u5BF9\u8C61\u53D8\u4E3A\u4E0D\u53EF\u6269\u5C55\uFF09</span>
  <span class="token keyword">return</span> value<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">SKIP</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span>Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token operator">?</span> TargetType<span class="token punctuation">.</span><span class="token constant">INVALID</span>
    <span class="token operator">:</span> <span class="token function">targetTypeMap</span><span class="token punctuation">(</span><span class="token function">toRawType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>\u5F53\u7C7B\u578B\u6821\u9A8C\u901A\u8FC7\u540E\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528<code>Proxy</code>\u53BB\u4EE3\u7406<code>target</code>\u4E86\u3002\u5F53<code>new Proxy(target, handler)</code>\u65F6\uFF0C\u8FD9\u91CC\u7684<code>handler</code>\u6709\u4E24\u79CD\uFF1A\u4E00\u79CD\u662F\u9488\u5BF9<code>Object</code>\u3001<code>Array</code>\u7684<code>mutableHandlers</code>\uFF0C\u4E00\u79CD\u662F\u9488\u5BF9\u96C6\u5408\uFF08<code>Set</code>\u3001<code>Map</code>\u3001<code>WeakMap</code>\u3001<code>WeakSet</code>\uFF09\u7684<code>mutableCollectionHandlers</code></p><h3 id="mutablehandlers" tabindex="-1"><code>mutableHandlers</code> <a class="header-anchor" href="#mutablehandlers" aria-hidden="true">#</a></h3><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/reactivity/src/baseHandlers.ts</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> mutableHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>object<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token punctuation">,</span>
  set<span class="token punctuation">,</span>
  deleteProperty<span class="token punctuation">,</span>
  has<span class="token punctuation">,</span>
  ownKeys
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230<code>mutableHandlers</code>\u6709<code>get</code>\u3001<code>set</code>\u3001<code>deleteProperty</code>\u3001<code>has</code>\u3001<code>ownKeys</code>\u4E94\u4E2A\u5C5E\u6027\uFF0C\u5206\u522B\u62E6\u622A\u4E86<code>proxy.attr</code>\u3001<code>proxy.attr = 1</code>\u3001<code>delete proxy.attr</code>\u3001<code>key in proxy</code>\u3001(<code>for...in</code>/<code>Object.getOwnPropertyNames(proxy)</code>/<code>Object.getOwnPropertySymbols(proxy)</code>/<code>Object.keys(proxy)</code>)\u64CD\u4F5C\u3002</p><ul><li><code>get</code>\uFF1A\u901A\u8FC7<code>createGetter</code>\u521B\u5EFA\u4E00\u4E2A<code>get</code>\u51FD\u6570\uFF0C<code>createGetter</code>\u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A<code>isReadonly</code>\u662F\u5426\u53EA\u8BFB\u3001<code>shallow</code>\u662F\u5426\u6D45\u5C42\u7684\u54CD\u5E94\u5F0F\u3002\u5728<code>get</code>\u51FD\u6570\u4E2D\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\u4EE5\u53CA\u5D4C\u5957\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u5904\u7406\u7B49\u64CD\u4F5C\u3002</li></ul><p>\u9996\u5148\u5224\u65AD<code>key</code>\u503C\u662F\u4E0D\u662F<code>vue</code>\u6DFB\u52A0\u7684\u4E00\u4E9B\u5C5E\u6027\uFF0C\u5982<code>__v_isReactive</code>\u3001<code>__v_isReadonly</code>\u7B49\uFF0C\u5982\u679C\u662F\u8FD9\u4E9B\u5C5E\u6027\uFF0C\u4E0D\u9700\u8981\u5176\u4ED6\u64CD\u4F5C\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u503C\u5373\u53EF\u3002\u7136\u540E\u68C0\u6D4B\u62E6\u622A\u7684<code>target</code>\u662F\u4E0D\u662F\u6570\u7EC4\uFF0C\u5BF9\u6570\u7EC4\u7684\u4E00\u4E9B\u65B9\u6CD5\u8FDB\u884C\u7279\u6B8A\u5904\u7406\u3002\u7D27\u63A5\u7740\u8C03\u7528<code>Reflect.get</code>\u83B7\u5F97<code>res</code>\uFF0C\u5224\u65AD\u5982\u679C<code>key</code>\u662F<code>Symbol</code>\u7684\u5185\u7F6E\u503C\u6216\u8005<code>key</code>\u4E0D\u9700\u8981\u88AB\u8FFD\u8E2A\uFF0C\u76F4\u63A5\u8FD4\u56DE<code>res</code>\u3002\u76F8\u53CD\u7D27\u63A5\u7740\u4E0B\u9762\u7684\u64CD\u4F5C\uFF1A\u5982\u679C\u4E0D\u662F\u53EA\u8BFB\uFF0C\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\uFF0C\u6536\u96C6\u5B8C\u4F9D\u8D56\u540E\uFF0C\u5224\u65AD\u662F\u4E0D\u662F\u6D45\u5C42\u54CD\u5E94\u5F0F\uFF0C\u5982\u679C\u662F\u76F4\u63A5\u8FD4\u56DE<code>res</code>\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u518D\u770B<code>res</code>\u662F\u4E0D\u662F<code>ref</code>\u7C7B\u578B\uFF0C\u5982\u679C\u662F<code>ref</code>\uFF0C\u5C1D\u8BD5\u89E3\u5305\u5E76\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u7D27\u63A5\u7740\u5224\u65AD<code>res</code>\u662F\u4E0D\u662F\u5BF9\u8C61\uFF0C\u5982\u679C\u662F\u5BF9\u8C61\u7684\u8BDD\uFF0C\u5C31\u9700\u8981\u5BF9\u5176\u8FDB\u884C\u54CD\u5E94\u5F0F\u5904\u7406\u3002</p><p><strong>\u4E3A\u4EC0\u4E48\u5355\u72EC\u5904\u7406<code>target</code>\u662F\u6570\u7EC4\uFF1F</strong></p><p>\u6570\u7EC4\u7684\u539F\u751F<code>includes</code>\u3001<code>indexOf</code>\u3001<code>lastIndexOf</code>\u65B9\u6CD5\u5BF9\u7D22\u5F15\u654F\u611F\uFF0C\u53EF\u80FD\u88AB\u4F9D\u8D56\u6536\u96C6\uFF0C\u6240\u4EE5\u9700\u8981\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\u3002\u5982\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> index<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment">// 0</span>
arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>push</code>\u3001<code>pop</code>\u3001<code>shift</code>\u3001<code>unshift</code>\u3001<code>splice</code>\u4F1A\u6539\u53D8\u81EA\u8EAB\u957F\u5EA6\uFF0C\u9700\u8981\u907F\u514D<code>length</code>\u88AB\u4F9D\u8D56\u6536\u96C6\uFF0C\u53EF\u80FD\u9020\u6210\u6B7B\u5FAA\u73AF</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> instrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// instrument identity-sensitive Array methods to account for possible reactive</span>
    <span class="token comment">// values</span>
  <span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;includes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;indexOf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lastIndexOf&#39;</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">track</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// we run the method using the original args first (which may be reactive)</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> res <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if that didn&#39;t work, run it again using raw values.</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toRaw<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// instrument length-altering mutation methods to avoid length being tracked</span>
  <span class="token comment">// which leads to infinite loops in some cases (#2137)</span>
  <span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
      <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> instrumentations
<span class="token punctuation">}</span>

<span class="token keyword">const</span> get <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">createGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createGetter</span><span class="token punctuation">(</span>isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Target<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> receiver<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// vue\u6846\u67B6\u6DFB\u52A0\u7684\u4E00\u4E9B\u5C5E\u6027\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span>isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_SHALLOW</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> shallow
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
      key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span> <span class="token operator">&amp;&amp;</span>
      receiver <span class="token operator">===</span>
      <span class="token punctuation">(</span>isReadonly
          <span class="token operator">?</span> shallow
            <span class="token operator">?</span> shallowReadonlyMap
            <span class="token operator">:</span> readonlyMap
          <span class="token operator">:</span> shallow
            <span class="token operator">?</span> shallowReactiveMap
            <span class="token operator">:</span> reactiveMap
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>

    <span class="token comment">// \u5904\u7406\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> targetIsArray <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>

    <span class="token comment">// builtInSymbols: new Set(Object.getOwnPropertyNames(Symbol).map(key =&gt; Symbol[key]).filter(val =&gt; typeof val === &#39;symbol&#39;))</span>
    <span class="token comment">// \u5982\u679Ckey\u662Fsymbol\u7C7B\u578B\uFF0C\u5E76\u4E14key\u662FSymbol\u5185\u7F6E\u7684\u503C\uFF0C\u76F4\u63A5\u8FD4\u56DEres</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u662Fsymbol\uFF0C\u5E76\u4E14key\u4E0D\u9700\u8981\u88AB\u8FFD\u8E2A\uFF0C\u76F4\u63A5\u8FD4\u56DEres</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSymbol</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> builtInSymbols<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">isNonTrackableKeys</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C\u4E0D\u662F\u53EA\u8BFB\uFF0C\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u3002\u56E0\u4E3A\u53EA\u8BFB\u7684target\uFF0C\u5C5E\u6027\u4E0D\u53EF\u88AB\u4FEE\u6539\uFF0C\u65E0\u9700\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C\u662F\u6D45\u5C42\u7684\u54CD\u5E94\u5F0F\uFF0C\u4E0D\u9700\u8981\u5D4C\u5957\u54CD\u5E94\u5F0F\uFF0C\u76F4\u63A5\u8FD4\u56DEres\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>shallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679Cres\u662F\u4E2Aref,\u81EA\u52A8\u89E3\u5305\u3002\u81EA\u52A8\u89E3\u5305\u7684\u524D\u63D0\u662Ftarget\u4E0D\u662F\u6570\u7EC4\uFF0C\u6216target\u662F\u6570\u7EC4\u4F46key\u4E0D\u662F\u4E2A\u6574\u6570\u7684key</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ref unwrapping - does not apply for Array + integer key.</span>
      <span class="token keyword">const</span> shouldUnwrap <span class="token operator">=</span> <span class="token operator">!</span>targetIsArray <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token keyword">return</span> shouldUnwrap <span class="token operator">?</span> res<span class="token punctuation">.</span>value <span class="token operator">:</span> res
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679Cres\u662F\u4E2A\u5BF9\u8C61\uFF0C\u8FDB\u884C\u5D4C\u5957\u54CD\u5E94\u5F0F\u5904\u7406\uFF0C\u8FD9\u91CC\u4E5F\u5C31\u8BF4\u660E\u4E3A\u4EC0\u4E48Proxy\u662F\u61D2\u60F0\u5F0F\u7684\u521B\u5EFA\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u53EA\u8981\u8BBF\u95EE\u5BF9\u5E94\u7684key\uFF0C\u624D\u4F1A\u7EE7\u7EED\u521B\u5EFA\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5426\u5219\u4E0D\u7528\u521B\u5EFA</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Convert returned value into a proxy as well. we do the isObject check</span>
      <span class="token comment">// here to avoid invalid value warning. Also need to lazy access readonly</span>
      <span class="token comment">// and reactive here to avoid circular dependency.</span>
      <span class="token keyword">return</span> isReadonly <span class="token operator">?</span> <span class="token keyword">readonly</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br></div></div><ul><li><code>set</code>\uFF1A\u901A\u8FC7<code>createSetter</code>\u521B\u5EFA\u4E00\u4E2A<code>set</code>\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF1A<code>shallow</code>\u662F\u4E0D\u662F\u6D45\u5C42\u54CD\u5E94\u5F0F\u3002\u5728<code>set</code>\u51FD\u6570\u4E2D\u9700\u8981\u89E6\u53D1\u91C7\u96C6\u7684\u4F9D\u8D56\u3002</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">createSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createSetter</span><span class="token punctuation">(</span>shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span>
    target<span class="token operator">:</span> object<span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
    receiver<span class="token operator">:</span> object
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> oldValue <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReadonly</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRef</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isRef</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isReadonly</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isShallow</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        oldValue <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRef</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isRef</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldValue<span class="token punctuation">.</span>value <span class="token operator">=</span> value
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// in shallow mode, objects are set as-is regardless of reactive or not</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7528\u4E8E\u5224\u65AD\u662F\u65B0\u589E\u8FD8\u662F\u4FEE\u6539\u64CD\u4F5C</span>
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span>
      <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length
        <span class="token operator">:</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token comment">// don&#39;t trigger if target is something up in the prototype chain of original</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u89E6\u53D1\u4F9D\u8D56</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasChanged</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><ul><li><code>deleteProperty</code>\uFF1A\u5220\u9664\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u4E5F\u89E6\u53D1\u76F8\u5173\u4F9D\u8D56</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><code>has</code>\uFF1A<code>key in peoxy</code>\u64CD\u4F5C\u65F6\uFF0C\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">has</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSymbol</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>builtInSymbols<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">HAS</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>ownKeys</code>\uFF1A<code>for...in</code>/<code>Object.getOwnPropertyNames(proxy)</code>/<code>Object.getOwnPropertySymbols(proxy)</code>/<code>Object.keys(proxy)</code>\u64CD\u4F5C\u65F6\uFF0C\u6536\u96C6\u4F9D\u8D56</li></ul><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">ITERATE</span><span class="token punctuation">,</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="mutablecollectionhandlers" tabindex="-1"><code>mutableCollectionHandlers</code> <a class="header-anchor" href="#mutablecollectionhandlers" aria-hidden="true">#</a></h3><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/reactivity/src/collectionHandlers.ts</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">createInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mutableInstrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> IterableCollections<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    has<span class="token punctuation">,</span>
    add<span class="token punctuation">,</span>
    set<span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> deleteEntry<span class="token punctuation">,</span>
    clear<span class="token punctuation">,</span>
    forEach<span class="token operator">:</span> <span class="token function">createForEach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> shallowInstrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> IterableCollections<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    has<span class="token punctuation">,</span>
    add<span class="token punctuation">,</span>
    set<span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> deleteEntry<span class="token punctuation">,</span>
    clear<span class="token punctuation">,</span>
    forEach<span class="token operator">:</span> <span class="token function">createForEach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> readonlyInstrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> IterableCollections<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    add<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    set<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    clear<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">CLEAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    forEach<span class="token operator">:</span> <span class="token function">createForEach</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> shallowReadonlyInstrumentations<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> IterableCollections<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> MapTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    add<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    set<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    clear<span class="token operator">:</span> <span class="token function">createReadonlyMethod</span><span class="token punctuation">(</span>TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">CLEAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    forEach<span class="token operator">:</span> <span class="token function">createForEach</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> iteratorMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;keys&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;values&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;entries&#39;</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span>
  iteratorMethods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    mutableInstrumentations<span class="token punctuation">[</span>method <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createIterableMethod</span><span class="token punctuation">(</span>
      method<span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span>
    <span class="token punctuation">)</span>
    readonlyInstrumentations<span class="token punctuation">[</span>method <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createIterableMethod</span><span class="token punctuation">(</span>
      method<span class="token punctuation">,</span>
      <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span>
    <span class="token punctuation">)</span>
    shallowInstrumentations<span class="token punctuation">[</span>method <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createIterableMethod</span><span class="token punctuation">(</span>
      method<span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token boolean">true</span>
    <span class="token punctuation">)</span>
    shallowReadonlyInstrumentations<span class="token punctuation">[</span>method <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createIterableMethod</span><span class="token punctuation">(</span>
      method<span class="token punctuation">,</span>
      <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token boolean">true</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    mutableInstrumentations<span class="token punctuation">,</span>
    readonlyInstrumentations<span class="token punctuation">,</span>
    shallowInstrumentations<span class="token punctuation">,</span>
    shallowReadonlyInstrumentations
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>
  mutableInstrumentations<span class="token punctuation">,</span>
  readonlyInstrumentations<span class="token punctuation">,</span>
  shallowInstrumentations<span class="token punctuation">,</span>
  shallowReadonlyInstrumentations
<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token comment">/* #__PURE__*/</span> <span class="token function">createInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createInstrumentationGetter</span><span class="token punctuation">(</span>isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> shallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> instrumentations <span class="token operator">=</span> shallow
    <span class="token operator">?</span> isReadonly
      <span class="token operator">?</span> shallowReadonlyInstrumentations
      <span class="token operator">:</span> shallowInstrumentations
    <span class="token operator">:</span> isReadonly
      <span class="token operator">?</span> readonlyInstrumentations
      <span class="token operator">:</span> mutableInstrumentations

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    target<span class="token operator">:</span> CollectionTypes<span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span>
    receiver<span class="token operator">:</span> CollectionTypes
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span>isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> isReadonly
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
      <span class="token function">hasOwn</span><span class="token punctuation">(</span>instrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> target
        <span class="token operator">?</span> instrumentations
        <span class="token operator">:</span> target<span class="token punctuation">,</span>
      key<span class="token punctuation">,</span>
      receiver
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> mutableCollectionHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>CollectionTypes<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token operator">:</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">createInstrumentationGetter</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div><p>\u5BF9\u4E8E<code>Map</code>\u3001<code>Set</code>\u3001<code>WeakMap</code>\u3001<code>WeakSet</code>\u53EA\u9700\u8981\u62E6\u622A\u5176<code>get</code>\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u96C6\u5408\u7684\u589E\u5220\u6539\u67E5\u7B49\u64CD\u4F5C\u90FD\u662F\u901A\u8FC7<code>api</code>\u5B8C\u6210\u7684\u3002\u5982<code>set.add</code>\u3001<code>map.set</code>\u3001<code>waekMap.delete</code>\u7B49\u65B9\u6CD5\uFF0C\u90FD\u4F1A\u89E6\u53D1<code>proxy</code>\u7684<code>get</code>\u62E6\u622A\u3002</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>\u5982\u679C\u5411<code>Map</code>\u3001<code>Set</code>\u3001<code>WeakMap</code>\u3001<code>WeakSet</code>\u5B9E\u4F8B\u4E2D\u6DFB\u52A0\u4E00\u4E9B\u81EA\u5B9A\u4E49\u5C5E\u6027\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u81EA\u5B9A\u4E49\u7684\u5C5E\u6027\u4E0D\u4F1A\u88AB\u8DDF\u8E2A\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> dummy
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  dummy <span class="token operator">=</span> set<span class="token punctuation">.</span>customProp
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dummy<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
set<span class="token punctuation">.</span>customProp <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dummy<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u56E0\u4E3A\u5728<code>get</code>\u62E6\u622A\u5668\u4E2D\u8FD4\u56DE\u7684\u7ED3\u679C\u662F<code>Reflect.get(hasOwn(instrumentations, key) &amp;&amp; key in target ? instrumentations: target, key, receiver)</code>\uFF0C\u9996\u5148\u68C0\u67E5<code>key</code>\u662F<code>instrumentations</code>\u7684\u5C5E\u6027\uFF0C\u5E76\u4E14\u5B58\u5728\u4E8E<code>target</code>\u4E2D\u3002\u5982\u679C\u7B26\u5408\u6761\u4EF6\uFF0C\u8FDB\u5165\u5BF9\u5E94\u7684\u65B9\u6CD5\u4E2D\uFF0C\u8FDB\u884C\u8FFD\u8E2A\uFF0C\u5982\u679C\u5426\u7684\u8BDD\u76F4\u63A5\u53D6<code>target</code>\u7684<code>key</code>\u503C\uFF0C\u4E0D\u4F1A\u7EE7\u7EED\u8FFD\u8E2A\u4E0B\u53BB\u3002 \u7528\u6237\u81EA\u5B9A\u4E49\u7684\u5C5E\u6027\u663E\u7136\u662F\u5728<code>instrumentations</code>\u4E0D\u5B58\u5728\u7684\uFF0C\u6240\u4EE5\u4F1A\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u7684\u503C\u3002</p></div><p>\u5728<code>get</code>\u62E6\u622A\u5668\u4E2D\u4F7F\u7528<code>createInstrumentations</code>\u521B\u5EFA\u7684<code>mutableInstrumentations</code>\uFF08\u76F8\u5F53\u4E8E\u5C06<code>add</code>\u3001<code>push</code>\u7B49\u65B9\u6CD5\u8FDB\u884C\u91CD\u5199\uFF09\uFF0C\u4EE5\u4FBF\u80FD\u591F\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\u548C\u89E6\u53D1\u4F9D\u8D56\u64CD\u4F5C\u3002\u5176\u4E2D<code>get</code>\u3001<code>size</code>\u3001<code>has</code>\u3001<code>forEach</code>\u3001<code>keys</code>\u3001<code>values</code>\u3001<code>entries</code>\u65B9\u6CD5\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6\uFF1B<code>add</code>\u3001<code>set</code>\u3001<code>delete</code>\u3001<code>clear</code>\u4F1A\u89E6\u53D1\u4F9D\u8D56</p>`,42),c=[o];function l(u,r,i,k,b,d){return a(),s("div",null,c)}var g=n(e,[["render",l]]);export{y as __pageData,g as default};
