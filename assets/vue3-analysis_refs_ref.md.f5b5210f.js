import{_ as n,c as s,o as a,d as p}from"./app.c4e37c69.js";var e="/blog/assets/ref.553c2275.png";const m='{"title":"ref","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/refs/ref.md"}',o={},t=p('<h1 id="ref" tabindex="-1">ref <a class="header-anchor" href="#ref" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>reactive</code>\u6240\u5728\u6A21\u5757\u4E3A\u54CD\u5E94\u5F0F\u6A21\u5757<code>reactivity</code></p><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/reactivity/src/ref.ts</code></p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>\u4F7F\u7528<code>ref</code>\u58F0\u660E\u4E00\u4E2A\u54CD\u5E94\u5F0F\u4E14\u53EF\u53D8\u7684\u6570\u636E\uFF0C\u901A\u8FC7<code>.value</code>\u53EF\u8BBF\u95EE\u5185\u90E8\u503C\u3002\u4E0E<code>reactive</code>\u4E0D\u540C\u7684\u662F\uFF0C<code>ref</code>\u63A5\u6536\u7684\u6570\u636E\u7C7B\u578B\u53EF\u4EE5\u662F\u57FA\u7840\u6570\u636E\u7C7B\u578B\uFF0C\u5982<code>ref(0)</code>\u3001<code>ref(true)</code></p></div><p><code>ref</code>\u521B\u5EFA\u6D41\u7A0B\uFF1A <img src="'+e+`" alt=""></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ref</span><span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createRef</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createRef</span><span class="token punctuation">(</span>rawValue<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> shallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> rawValue
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RefImpl</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">,</span> shallow<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>ref</code>\u63A5\u6536\u4E00\u4E2A<code>value</code>\u53C2\u6570\u3002\u901A\u8FC7\u8C03\u7528<code>createRef()</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>RefImpl</code>\u5B9E\u4F8B\uFF0C<code>createRef()</code>\u63A5\u6536<code>value</code>\u53CA<code>shallow</code>\uFF08\u662F\u5426\u6D45\u5C42\u54CD\u5E94\u5F0F\uFF0C<code>ref</code>\u9ED8\u8BA4<code>false</code>\uFF09\u3002<code>createRef()</code>\u4E2D\u9996\u5148\u5224\u65AD\u4F20\u5165\u7684<code>rawValue</code>\u662F\u4E0D\u662F<code>ref</code>\u7C7B\u578B\uFF0C\u5982\u679C\u662F\u76F4\u63A5\u8FD4\u56DE<code>rawValue</code>\uFF0C\u5982\u679C\u4E0D\u662F\u8FD4\u56DE<code>new RefImpl()</code>\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">RefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> _value<span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token keyword">private</span> _rawValue<span class="token operator">:</span> <span class="token constant">T</span>

  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isShallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue <span class="token operator">=</span> __v_isShallow <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> __v_isShallow <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token function">toReactive</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newVal <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__v_isShallow <span class="token operator">?</span> newVal <span class="token operator">:</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasChanged</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue <span class="token operator">=</span> newVal
      <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__v_isShallow <span class="token operator">?</span> newVal <span class="token operator">:</span> <span class="token function">toReactive</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
      <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p><code>RefImpl</code>\u7684\u5B9E\u73B0\u5F88\u7B80\u5355\uFF0C\u5176\u5B9E\u5C31\u662F\u5229\u7528<code>es6 class</code>\u7684<code>get</code>\u3001<code>set</code>\u5B58\u53D6\u51FD\u6570\u6765\u5B9E\u73B0\u7B80\u5355\u6570\u636E\u7C7B\u578B\u7684\u4F9D\u8D56\u6536\u96C6\u4E0E\u89E6\u53D1\u4F9D\u8D56\u64CD\u4F5C\u3002</p><p>\u5728<code>RefImpl</code>\u6784\u9020\u5668\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A<code>value</code>\uFF08\u9700\u8981\u5904\u7406\u7684<code>value</code>\uFF09\uFF0C<code>__v_isShallow</code>\uFF08\u662F\u5426\u6D45\u5C42\u54CD\u5E94\u5F0F\uFF09\uFF0C\u521D\u59CB\u5316<code>RefImpl</code>\u5B9E\u4F8B\u8FC7\u7A0B\u4E2D\uFF0C\u5728\u5185\u90E8\u8BBE\u7F6E\u4E86\u4E24\u4E2A\u79C1\u6709\u5C5E\u6027\uFF1A<code>this._rawValue</code>\uFF0C<code>this._value</code>\u3002\u5176\u4E2D<code>this._rawValue</code>\u5B58\u50A8\u7684\u662F\u539F\u59CB\u503C\uFF08\u8FD9\u91CC\u7684\u539F\u59CB\u503C\u4E0D\u4E00\u5B9A\u662F\u4F20\u5165\u7684<code>value</code>\uFF09\uFF1B<code>this._value</code>\u662F\u5904\u7406\u540E\u7684\u503C\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> barProxy <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span>
<span class="token keyword">const</span> refImpl <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token function">reactive</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>refImpl<span class="token punctuation">.</span>_rawValue <span class="token operator">===</span> barProxy<span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>refImpl<span class="token punctuation">.</span>_rawValue <span class="token operator">===</span> bar<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>this._value = __v_isShallow ? value : toReactive(value)</code>\uFF0C\u5BF9\u4E8E<code>this._value</code>\u7684\u503C\uFF0C\u5982\u679C\u662F\u6D45\u5C42\u54CD\u5E94\u5F0F\uFF0C\u90A3\u4E48\u5C31\u662F<code>value</code>\uFF0C\u5982\u679C\u4E0D\u662F\u8C03\u7528<code>toReactive(value)</code>\uFF0C\u521B\u5EFA\u54CD\u5E94\u5F0F\u6570\u636E\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> toReactive <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span>
  <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">:</span> value
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>toReactive()</code>\u903B\u8F91\u5F88\u7B80\u5355\u3002\u5982\u679C<code>value</code>\u662F\u4E2A\u5BF9\u8C61\u7684\u8BDD\uFF0C\u4F7F\u7528<code>reactive</code>\u521B\u5EFA\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5982\u679C\u4E0D\u662F\u76F4\u63A5\u8FD4\u56DE<code>value</code></p><p>\u518D\u770B<code>RefImpl</code>\u7684<code>get</code>\u53D6\u503C\u5668\uFF0C\u5F53\u8C03\u7528<code>ref(value).value</code>\uFF0C\u4F1A\u8C03\u7528\u4E00\u4E2A<code>trackRefValue()</code>\u65B9\u6CD5\uFF0C\u7136\u540E\u8FD4\u56DE<code>this._value</code>\u3002<code>trackRefValue()</code>\u5176\u5B9E\u5C31\u662F\u6536\u96C6\u4F9D\u8D56\uFF0C\u8BE5\u90E8\u5206\u5728\u540E\u7EED\u7BC7\u7AE0\u4E2D\u7EE7\u7EED\u6DF1\u7A76\u3002</p><p><code>RefImpl</code>\u7684<code>set</code>\u5BC4\u5B58\u5668\u4E2D\u4F1A\u5C06\u65B0\u7684\u503C\u4E0E\u65E7\u7684\u503C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u65B0\u65E7\u503C\u4E0D\u540C\u7684\u8BDD\uFF0C\u66F4\u65B0\u76F8\u5E94\u7684\u5C5E\u6027\uFF0C\u5E76\u89E6\u53D1\u4F9D\u8D56\uFF0C\u5982\u679C\u76F8\u540C\u5219\u4E0D\u9700\u8981\u505A\u4EFB\u4F55\u64CD\u4F5C</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trackRefValue</span><span class="token punctuation">(</span>ref<span class="token operator">:</span> RefBase<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrack <span class="token operator">&amp;&amp;</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ref <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trackEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">||</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        target<span class="token operator">:</span> ref<span class="token punctuation">,</span>
        type<span class="token operator">:</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">trackEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">||</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,16),c=[t];function l(u,r,i,k,d,b){return a(),s("div",null,c)}var v=n(o,[["render",l]]);export{m as __pageData,v as default};
