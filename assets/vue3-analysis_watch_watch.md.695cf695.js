import{_ as n,c as s,o as a,d as p}from"./app.c4e37c69.js";var t="/blog/assets/watch.da22bcca.png";const f='{"title":"watch","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/watch/watch.md"}',e={},o=p(`<h1 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>watch</code>\u7528\u6765\u76D1\u542C\u7279\u5B9A\u6570\u636E\u6E90\uFF0C\u5E76\u5728\u5355\u72EC\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u6267\u884C\u526F\u4F5C\u7528\u3002\u9ED8\u8BA4\u662F\u60F0\u6027\u7684\u2014\u2014\u5373\u56DE\u8C03\u4EC5\u5728\u4FA6\u542C\u6E90\u53D1\u751F\u53D8\u5316\u65F6\u88AB\u8C03\u7528\u3002 \u6587\u4EF6\u4F4D\u7F6E\uFF1A<code>packages/runtime-core/src/apiWatch.ts</code></p></div><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">watch</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> Immediate <span class="token keyword">extends</span> Readonly<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  source<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> WatchSource<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  cb<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> WatchOptions<span class="token operator">&lt;</span>Immediate<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> WatchStopHandle <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> <span class="token function">doWatch</span><span class="token punctuation">(</span>source <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>watch</code>\u63A5\u6536\u4E09\u4E2A\u53C2\u6570\uFF1A<code>source</code>\u76D1\u542C\u7684\u6E90\u3001<code>cb</code>\u56DE\u8C03\u51FD\u6570\u3001<code>options</code>\u76D1\u542C\u914D\u7F6E\uFF0C<code>watch</code>\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u505C\u6B62\u76D1\u542C\u51FD\u6570\u3002\u3002\u5728<code>watch</code>\u4E2D\u8C03\u7528\u4E86\u4E00\u4E2A\u53EB\u505A<code>doWatch</code>\u7684\u51FD\u6570\uFF0C\u4E0E<code>watch</code>\u4F5C\u7528\u76F8\u4F3C\u7684<code>watchEffect</code>\u3001<code>watchPostEffect</code>\u3001<code>watchSyncEffect</code>\u5185\u90E8\u4E5F\u90FD\u4F7F\u7528\u4E86\u8FD9\u4E2A<code>doWatch</code>\u51FD\u6570\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">watchEffect</span><span class="token punctuation">(</span>
  effect<span class="token operator">:</span> WatchEffect<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> WatchOptionsBase
<span class="token punctuation">)</span><span class="token operator">:</span> WatchStopHandle <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doWatch</span><span class="token punctuation">(</span>effect<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">watchPostEffect</span><span class="token punctuation">(</span>
  effect<span class="token operator">:</span> WatchEffect<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doWatch</span><span class="token punctuation">(</span>
    effect<span class="token punctuation">,</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>__DEV__
      <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> WatchOptionsBase
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">watchSyncEffect</span><span class="token punctuation">(</span>
  effect<span class="token operator">:</span> WatchEffect<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doWatch</span><span class="token punctuation">(</span>
    effect<span class="token punctuation">,</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>__DEV__
      <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;sync&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;sync&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> WatchOptionsBase
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u53EF\u89C1<code>doWatch</code>\u662F\u4E00\u7CFB\u5217<code>watch</code>\u7684\u6838\u5FC3\uFF0C\u63A5\u4E0B\u6765\u91CD\u70B9\u7814\u7A76<code>doWatch</code>\u7684\u5B9E\u73B0\u3002</p><p><code>doWatch</code>\u51FD\u6570\u63A5\u6536\u4E09\u4E2A\u53C2\u6570\uFF1A<code>source</code>\uFF0C\u76D1\u542C\u7684\u6570\u636E\u6E90\uFF0C<code>cb</code>\u56DE\u8C03\u51FD\u6570\uFF0C<code>options</code>\uFF1A\u76D1\u542C\u914D\u7F6E\u3002</p><p>\u9996\u5148\uFF0C<code>doWatch</code>\u5185\u90E8\u58F0\u660E\u4E86\u4E09\u4E2A\u53D8\u91CF\uFF1A<code>getter</code>\u5728\u521D\u59CB\u5316<code>effect</code>\u65F6\u4F7F\u7528\u3001<code>forceTrigger</code>\u5F3A\u5236\u66F4\u65B0\u3001<code>isMultiSource</code>\u662F\u5426\u4E3A\u591A\u6570\u636E\u6E90\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token keyword">let</span> forceTrigger <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> isMultiSource <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7D27\u63A5\u7740\u6839\u636E\u4F20\u5165\u7684<code>source</code>\u7C7B\u578B\u4FEE\u6539\u8FD9\u4E09\u4E2A\u53D8\u91CF\uFF1A</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u5982\u679C\u662Fref\uFF0Cgetter\u51FD\u6570\u8FD4\u4F1Asource.value\uFF0C\u53EF\u4EE5\u6536\u96C6\u5BF9\u5E94\u4F9D\u8D56</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source<span class="token punctuation">.</span>value
  forceTrigger <span class="token operator">=</span> <span class="token function">isShallow</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReactive</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662Freactive\uFF0Cgetter\u51FD\u6570\u8FD4\u56DEsource\uFF0C\u5E76\u8BBE\u7F6Edeep\u6DF1\u5EA6\u76D1\u542C</span>
  <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source
  deep <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662F\u6570\u7EC4\uFF0C\u8BBE\u7F6EisMultiSource\u4E3Atrue\uFF0C\u4EE3\u8868\u591A\u6570\u636E\u6E90</span>
  isMultiSource <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u5F3A\u5236\u89E6\u53D1\u7684\u524D\u63D0\u662F\uFF0C\u6570\u7EC4\u4E2D\u81F3\u5C11\u6709\u4E00\u4E2A\u6570\u636E\u6E90\u662Freactive</span>
  forceTrigger <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>isReactive<span class="token punctuation">)</span>
  <span class="token comment">// getter\u51FD\u6570\u9488\u5BF9\u4E0D\u540C\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u4E0D\u540C\u5904\u7406</span>
  <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    source<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span>value
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReactive</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">traverse</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">callWithErrorHandling</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> ErrorCodes<span class="token punctuation">.</span><span class="token constant">WATCH_GETTER</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token function">warnInvalidSource</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6709\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u662Fwatch</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token function">callWithErrorHandling</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> ErrorCodes<span class="token punctuation">.</span><span class="token constant">WATCH_GETTER</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CA1\u6709\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u662FwatchEffect</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u7EC4\u4EF6\u5DF2\u88AB\u5378\u8F7D\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>isUnmounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6E05\u9664\u4F9D\u8D56</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6267\u884Csource\u51FD\u6570</span>
      <span class="token keyword">return</span> <span class="token function">callWithAsyncErrorHandling</span><span class="token punctuation">(</span>
        source<span class="token punctuation">,</span>
        instance<span class="token punctuation">,</span>
        ErrorCodes<span class="token punctuation">.</span><span class="token constant">WATCH_CALLBACK</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>onCleanup<span class="token punctuation">]</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  getter <span class="token operator">=</span> <span class="token constant">NOOP</span>
  __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token function">warnInvalidSource</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><p>\u5982\u679C\u6709<code>cb</code>\u5E76\u4E14<code>deep</code>\u4E3A<code>true</code>\uFF0C\u4F7F\u7528<code>traverse</code>\u51FD\u6570\u9012\u5F52\u904D\u5386\u6570\u636E\u6E90\u7684\u5C5E\u6027\u8FDB\u884C\u76D1\u542C\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u5982\u679C\u6709\u56DE\u8C03\u51FD\u6570\u5E76\u4E14deep\u4E3Atrue\uFF0C\u4F7F\u7528traverse\u9012\u5F52\u904D\u5386\u6240\u6709\u5C5E\u6027</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>cb <span class="token operator">&amp;&amp;</span> deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> baseGetter <span class="token operator">=</span> getter
  <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token function">baseGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>traverse</code>\u5B9E\u73B0\uFF0C\u9012\u5F52\u904D\u5386\u83B7\u53D6\u503C\uFF0C<code>seen</code>\u7528\u4E8E\u9632\u6B62\u5FAA\u73AF\u5F15\u7528\u95EE\u9898</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> seen<span class="token operator">?</span><span class="token operator">:</span> Set<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>value <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">SKIP</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
  seen <span class="token operator">=</span> seen <span class="token operator">||</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>value<span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSet</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isMap</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div><p>\u7D27\u8DDF\u7740\u58F0\u660E\u4E86<code>cleanup</code>\u4E0E<code>onCleanup</code>\u4E24\u4E2A\u53D8\u91CF\uFF0C\u5728<code>onCleanup</code>\u4E2D\u7ED9<code>cleanup</code>\u8FDB\u884C\u91CD\u65B0\u8D4B\u503C\u3002\u8FD9\u91CC\u7684<code>onCleanup</code>\u4F1A\u4F5C\u4E3A<code>watchEffect</code>\u4E2D\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u7528\u6765\u6CE8\u518C\u6E05\u7406\u5931\u6548\u65F6\u7684\u56DE\u8C03</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">cleanup</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">let</span> onCleanup<span class="token operator">:</span> <span class="token function-variable function">OnCleanup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  cleanup <span class="token operator">=</span> effect<span class="token punctuation">.</span><span class="token function-variable function">onStop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">callWithErrorHandling</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> ErrorCodes<span class="token punctuation">.</span><span class="token constant">WATCH_CLEANUP</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7136\u540E\u521D\u59CB\u5316<code>oldValue</code>\uFF0C\u5E76\u58F0\u660E\u4E86\u4E00\u4E2A<code>job</code>\u51FD\u6570\uFF0C\u8BBE\u7F6E<code>job.allowRecurse = !!cb</code></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">let</span> oldValue <span class="token operator">=</span> isMultiSource <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">INITIAL_WATCHER_VALUE</span>
<span class="token keyword">const</span> job<span class="token operator">:</span> <span class="token function-variable function">SchedulerJob</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>effect<span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// watch(source, cb)</span>
    <span class="token keyword">const</span> newValue <span class="token operator">=</span> effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u662Fdeep || forceTrigger || || \u503C\u53D8\u5316\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      deep <span class="token operator">||</span>
      forceTrigger <span class="token operator">||</span>
      <span class="token punctuation">(</span>isMultiSource
        <span class="token operator">?</span> <span class="token punctuation">(</span>newValue <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token function">hasChanged</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token punctuation">(</span>oldValue <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">hasChanged</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
      <span class="token punctuation">(</span>__COMPAT__ <span class="token operator">&amp;&amp;</span>
        <span class="token function">isArray</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">isCompatEnabled</span><span class="token punctuation">(</span>DeprecationTypes<span class="token punctuation">.</span><span class="token constant">WATCH_ARRAY</span><span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6267\u884C\u524D\u6E05\u9664\u526F\u4F5C\u7528</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
      <span class="token function">callWithAsyncErrorHandling</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> ErrorCodes<span class="token punctuation">.</span><span class="token constant">WATCH_CALLBACK</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        newValue<span class="token punctuation">,</span>
        <span class="token comment">// pass undefined as the old value when it&#39;s changed for the first time</span>
        oldValue <span class="token operator">===</span> <span class="token constant">INITIAL_WATCHER_VALUE</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> oldValue<span class="token punctuation">,</span>
        onCleanup
      <span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token comment">// \u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u66F4\u65B0oldValue</span>
      oldValue <span class="token operator">=</span> newValue
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// watchEffect</span>
    effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5141\u8BB8\u9012\u5F52\u8C03\u7528\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EF\u4EE5\u5728watch\u91CC\u9762\u4FEE\u6539\u503C\uFF0C\u8FBE\u5230\u91CD\u65B0\u89E6\u53D1watch\u7684\u76EE\u7684</span>
job<span class="token punctuation">.</span>allowRecurse <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>cb
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>\u63A5\u7740\u58F0\u660E\u4E00\u4E2A<code>scheduler</code>\u8C03\u5EA6\u5668\uFF0C\u5E76\u6839\u636E<code>flush</code>\u6765\u51B3\u5B9A<code>job</code>\u6267\u884C\u65F6\u673A\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">let</span> scheduler<span class="token operator">:</span> EffectScheduler
<span class="token keyword">if</span> <span class="token punctuation">(</span>flush <span class="token operator">===</span> <span class="token string">&#39;sync&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u540C\u6B65\u72B6\u6001</span>
  scheduler <span class="token operator">=</span> job <span class="token keyword">as</span> <span class="token builtin">any</span> <span class="token comment">// the scheduler function gets called directly</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flush <span class="token operator">===</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF\u6267\u884C\uFF0C\u5C06job\u6DFB\u52A0\u52A0\u4E00\u4E2A\u5EF6\u8FDF\u961F\u5217\uFF0C\u8FD9\u4E2A\u961F\u5217\u4F1A\u5728\u7EC4\u4EF6\u6302\u5728\u540E\u3001\u66F4\u65B0\u7684\u7533\u660E\u5468\u671F\u4E2D\u6267\u884C</span>
  <span class="token function-variable function">scheduler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">queuePostRenderEffect</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> instance <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>suspense<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9ED8\u8BA4 pre\uFF0C\u5C06job\u6DFB\u52A0\u5230\u4E00\u4E2A\u4F18\u5148\u6267\u884C\u961F\u5217\uFF0C\u8BE5\u961F\u5217\u5728\u6302\u8F7D\u524D\u6267\u884C</span>
  <span class="token function-variable function">scheduler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance <span class="token operator">||</span> instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">queuePreFlushCb</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// with &#39;pre&#39; option, the first call must happen before</span>
      <span class="token comment">// the component is mounted so it is called synchronously.</span>
      <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>getter</code>\u4E0E<code>scheduler</code>\u51C6\u5907\u5B8C\u6210\uFF0C\u521B\u5EFA<code>effect</code>\u5B9E\u4F8B\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> scheduler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u521B\u5EFA<code>effect</code>\u5B9E\u4F8B\u540E\uFF0C\u5F00\u59CB\u9996\u6B21\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token comment">// \u5982\u679C\u6709cb</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9700\u8981\u7ACB\u5373\u6267\u884C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728job\u4E2D\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u53CA\u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    oldValue <span class="token operator">=</span> effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flush <span class="token operator">===</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9700\u8981\u5EF6\u8FDF\u6267\u884C\uFF0C\u5C06runner\u63A8\u5165\u5EF6\u8FDF\u961F\u5217\u4E2D</span>
  <span class="token function">queuePostRenderEffect</span><span class="token punctuation">(</span>
    effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>effect<span class="token punctuation">)</span><span class="token punctuation">,</span>
    instance <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>suspense
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u6700\u540E\u8FD4\u56DE\u4E00\u4E2A\u505C\u6B62\u76D1\u542C\u6570\u636E\u6E90\u7684\u51FD\u6570\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  effect<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>scope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">remove</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>scope<span class="token punctuation">.</span>effects<span class="token operator">!</span><span class="token punctuation">,</span> effect<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>watch</code>\u6D41\u7A0B\uFF1A</p><p><img src="`+t+'" alt=""></p>',28),c=[o];function l(u,r,i,k,b,d){return a(),s("div",null,c)}var w=n(e,[["render",l]]);export{f as __pageData,w as default};
