import{_ as n,c as s,o as a,d as e}from"./app.d2a36d2c.js";var p="/blog/assets/computed.12b2672d.png";const f='{"title":"computed","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-analysis/computed.md"}',t={},o=e('<h1 id="computed" tabindex="-1">computed <a class="header-anchor" href="#computed" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u8BA1\u7B97\u5C5E\u6027\u3002\u63A5\u53D7\u4E00\u4E2A<code>getter</code>\u51FD\u6570\uFF0C\u5E76\u6839\u636E<code>getter</code>\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u8FD4\u56DE\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u54CD\u5E94\u5F0F<code>ref</code>\u5BF9\u8C61\u3002\u6216\u8005\uFF0C\u63A5\u53D7\u4E00\u4E2A\u5177\u6709<code>get</code>\u548C<code>set</code>\u51FD\u6570\u7684\u5BF9\u8C61\uFF0C\u7528\u6765\u521B\u5EFA\u53EF\u5199\u7684 ref \u5BF9\u8C61\u3002</p><p>\u6587\u4EF6\u4F4D\u7F6E\uFF1Apackages/reactivity/src/computed.ts</p></div><p><code>computed</code>\u6D41\u7A0B\u56FE\uFF1A <img src="'+p+`" alt=""></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">computed</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  getterOrOptions<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> WritableComputedOptions<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  debugOptions<span class="token operator">?</span><span class="token operator">:</span> DebuggerOptions<span class="token punctuation">,</span>
  isSSR <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  <span class="token keyword">let</span> setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>

  <span class="token keyword">const</span> onlyGetter <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>getterOrOptions<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyGetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> getterOrOptions
    setter <span class="token operator">=</span> __DEV__
      <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Write operation failed: computed value is readonly&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> <span class="token constant">NOOP</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>get
    setter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>set
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> cRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComputedRefImpl</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> setter<span class="token punctuation">,</span> onlyGetter <span class="token operator">||</span> <span class="token operator">!</span>setter<span class="token punctuation">,</span> isSSR<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> debugOptions <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cRef<span class="token punctuation">.</span>effect<span class="token punctuation">.</span>onTrack <span class="token operator">=</span> debugOptions<span class="token punctuation">.</span>onTrack
    cRef<span class="token punctuation">.</span>effect<span class="token punctuation">.</span>onTrigger <span class="token operator">=</span> debugOptions<span class="token punctuation">.</span>onTrigger
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> cRef <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><code>computed</code>\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E8C\u53C2\u6570\u662F\u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1\u4F9D\u8D56\u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u53EA\u5728\u5F00\u53D1\u73AF\u5883\u4E2D\u8D77\u4F5C\u7528\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u505A\u89E3\u91CA\u4E86\u3002\u4E3B\u8981\u770B\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u89C2\u5BDF\u5176\u7C7B\u578B\uFF0C\u53D1\u73B0\u53EF\u4EE5\u4F20\u4E24\u79CD\u53C2\u6570\uFF1A\u4E00\u79CD\u662F\u4E00\u4E2A<code>getter</code>\u51FD\u6570\uFF0C\u4E00\u79CD\u662F\u4E2A\u5305\u542B<code>get</code>\u3001<code>set</code>\u7684\u5BF9\u8C61\u3002</p><p><code>computed</code>\u4E2D\uFF0C\u9996\u5148\u4ECE<code>options</code>\u4E2D\u786E\u5B9A<code>getter</code>\u3001<code>setter</code>\uFF0C\u786E\u5B9A\u597D\u4E4B\u540E\uFF0C\u521B\u5EFA\u4E00\u4E2A<code>ComputedRefImpl</code>\u5B9E\u4F8B\uFF0C\u5E76\u5C06\u5176\u8FD4\u56DE\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ComputedRefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span>

  <span class="token keyword">private</span> _value<span class="token operator">!</span><span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>

  <span class="token comment">// \u6807\u8BB0\u4E3A\u4E00\u4E2Aref\u7C7B\u578B</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u53EA\u8BFB\u6807\u8BC6</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token comment">// \u662F\u5426\u4E3A\u810F\u6570\u636E\uFF0C\u5982\u679C\u662F\u810F\u6570\u636E\u9700\u8981\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">public</span> _dirty <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">public</span> _cacheable<span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>
    getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> _setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
    isSSR<span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_cacheable <span class="token operator">=</span> <span class="token operator">!</span>isSSR
    <span class="token keyword">this</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span> <span class="token operator">=</span> isReadonly
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// computed\u53EF\u80FD\u88AB\u5176\u4ED6proxy\u5305\u88F9\uFF0C\u5982readonly(computed(() =&gt; foo.bar))</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u662F\u810F\u6570\u636E\uFF0C\u9700\u8981\u91CD\u65B0\u8BA1\u7B97</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_dirty <span class="token operator">||</span> <span class="token operator">!</span>self<span class="token punctuation">.</span>_cacheable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// _dirty\u53D6false\uFF0C\u9632\u6B62\u4F9D\u8D56\u4E0D\u53D8\u91CD\u590D\u8BA1\u7B97</span>
      self<span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token comment">// \u8BA1\u7B97</span>
      self<span class="token punctuation">.</span>_value <span class="token operator">=</span> self<span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_setter</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><p><code>ComputedRefImpl</code>\u6784\u9020\u5668\u63A5\u6536\u56DB\u4E2A\u53C2\u6570\uFF1A<code>getter</code>\u3001<code>setter</code>\u3001<code>isReadonly</code>\uFF08\u662F\u5426\u53EA\u8BFB\uFF09\u3001<code>isSSR</code>\uFF08\u662F\u5426\u4E3A<code>SSR</code>\uFF09\u3002</p><p>\u5728\u6784\u9020\u5668\u5185\u90E8\u521B\u5EFA\u4E00\u4E2A<code>ReactiveEffect</code>\u5B9E\u4F8B\uFF0C\u5E76\u5C06<code>getter</code>\u4E0E\u4E00\u4E2A\u8C03\u5EA6\u51FD\u6570\u4F20\u9012\u7ED9<code>ReactiveEffect</code>\u6784\u9020\u5668\uFF0C\u5E76\u5C06\u521B\u5EFA\u597D\u7684\u5B9E\u4F8B\u8D4B\u7ED9\u5F53\u524D\u5B9E\u4F8B\u7684<code>effect</code>\u5C5E\u6027\uFF0C\u7136\u540E\u5C06<code>this.effect.computed</code>\u6307\u5411\u5F53\u524D\u5BF9\u8C61\u3002\u5206\u6790\u81F3\u6B64\uFF0C\u6211\u4EEC\u53D1\u73B0\u6B64\u65F6\u5E76\u6CA1\u6709\u8BA1\u7B97\u4EFB\u4F55\u7684\u6570\u636E\uFF0C\u8BF4\u660E<code>computed</code>\u662F\u61D2\u60F0\u7684\uFF0C\u53EA\u6709\u4F7F\u7528\u5230<code>computed</code>\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u624D\u80FD\u89E6\u53D1\u76F8\u5173\u8BA1\u7B97\u3002\u63A5\u4E0B\u6765\u4EE5\u4E0B\u9762\u4E00\u4E2A\u4F8B\u5B50\u7EE7\u7EED\u5411\u4E0B\u5206\u6790\u3002</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reactive</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> cValue <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span>
value<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7ECF\u8FC7\u4E0A\u9762\u5206\u6790\uFF0C\u6211\u4EEC\u77E5\u9053<code>cValue</code>\u662F\u4E2A<code>ComputedRefImpl</code>\u5B9E\u4F8B\u3002\u5F53\u6253\u5370<code>cValue.value</code>\u65F6\uFF0C\u4F1A\u547D\u4E2D<code>ComputedRefImpl</code>\u5BF9\u5E94\u7684<code>get</code>\u65B9\u6CD5\uFF0C\u5728<code>get</code>\u4E2D\uFF0C\u6536\u96C6\u5BF9\u5E94\u4F9D\u8D56\uFF0C\u518D\u8FDB\u884C\u6570\u636E\u7684\u8BA1\u7B97\uFF0C\u5728\u8BA1\u7B97\u4E4B\u524D\u4F1A\u5148\u5224\u65AD\u662F\u4E0D\u662F\u810F\u6570\u636E\uFF0C\u53EA\u6709\u662F\u810F\u6570\u636E\u7684\u65F6\u5019\u624D\u4F1A\u8FDB\u884C\u6570\u636E\u7684\u91CD\u65B0\u8BA1\u7B97\uFF08<code>self.effect.run()</code>\uFF09\uFF0C\u5E76\u5C06\u8BA1\u7B97\u5B8C\u6210\u540E\u5C06\u6570\u636E\u7F13\u5B58\u81F3<code>selft._vlaue</code>\u4E2D\uFF0C\u65B9\u4FBF\u4E0B\u6B21\u7684\u5229\u7528\u3002\u7B2C\u4E00\u6B21\u901A\u8FC7<code>self.effect.run()</code>\u5F97\u5230\u7684\u7ED3\u679C\u4E3A<code>1</code>\u3002\u63A5\u4E0B\u6765\u4FEE\u6539<code>value</code>\u7684<code>foo</code>\u5C5E\u6027\uFF0C\u8FDB\u5165\u5230<code>value</code>\u7684<code>set</code>\u62E6\u622A\u5668\u4E2D\uFF0C\u89E6\u53D1\u76F8\u5173\u4F9D\u8D56\uFF0C\u6B64\u65F6<code>foo</code>\u53EA\u6709\u4E00\u4E2A\u4F9D\u8D56\uFF0C\u90A3\u5C31\u662F\u5728\u521B\u5EFA<code>ComputedRedImpl</code>\u8FC7\u7A0B\u4E2D\u521B\u5EFA\u7684<code>ReactiveEffect</code>\uFF0C\u6B64\u65F6\u89E6\u53D1\u4F9D\u8D56\u5C31\u662F\u89E6\u53D1\u8FD9\u4E2A<code>ReactiveEffect</code>\uFF0C\u7ED3\u5408<a href="https://maxlz1.github.io/blog/vue3-analysis/effect/%E8%A7%A6%E5%8F%91%E4%BE%9D%E8%B5%96.html" target="_blank" rel="noopener noreferrer">\u4F9D\u8D56\u89E6\u53D1</a>\u7684\u6D41\u7A0B\uFF0C\u6211\u4EEC\u77E5\u9053\u8FD9\u65F6\u4F1A\u6267\u884C\u521B\u5EFA<code>ReactiveEffect</code>\u65F6\u4F20\u5165\u7684<code>scheduler</code>\u3002</p><p>\u5728<code>scheduler</code>\u4E2D\u628A<code>_dirty</code>\u7F6E\u4E3A<code>true</code>\uFF0C\u5C06\u6570\u636E\u6807\u8BB0\u4E3A\u810F\u6570\u636E\uFF0C\u4EE5\u4FBF\u4E0B\u6B21\u8BFB\u53D6\u65F6\u91CD\u65B0\u8BA1\u7B97\u3002\u518D\u6B21\u6253\u5370<code>cValue.value</code>\uFF0C\u547D\u4E2D<code>ComputedRefImpl</code>\u5BF9\u5E94\u7684<code>get</code>\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5728\u524D\u4E00\u6B65\u8D4B\u503C\u8FC7\u7A0B\u4E2D\uFF0C<code>_dirty</code>\u88AB\u6807\u8BB0\u4E3A\u4E86<code>true</code>\uFF0C\u6240\u4EE5\u8FD9\u6B21\u4F1A\u91CD\u65B0\u8BA1\u7B97\u3002\u6253\u5370<code>2</code>\u3002</p><p><strong><code>_dirty</code>\u4EC0\u4E48\u65F6\u5019\u53D8\u4E3A<code>true</code>\uFF1F</strong></p><p>\u5F53\u4FEE\u6539<code>computed</code>\u6240\u4F9D\u8D56\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u65F6\uFF0C\u89E6\u53D1\u5176\u5BF9\u5E94\u7684\u4F9D\u8D56\uFF0C\u5728\u89E6\u53D1\u4F9D\u8D56\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u5BF9\u65B0\u7684\u503C\u4E0E\u65E7\u503C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u65B0\u65E7\u503C\u4E0D\u540C\uFF0C\u89E6\u53D1<code>effect.scheduler()</code>\uFF0C\u5728<code>scheduler</code>\u4E2D\u4F1A\u5C06<code>_dirty</code>\u7F6E\u4E3A<code>true</code>\u3002</p><p><strong>\u603B\u7ED3</strong></p><p><code>computed</code>\u672C\u8D28\u4E5F\u662F\u4E2A<code>ref</code>\uFF08<code>ComputedRefImpl</code>\uFF09\uFF0C\u4F1A\u7F13\u5B58\u8BA1\u7B97\u7684\u503C\uFF0C\u5185\u90E8\u901A\u8FC7<code>_dirty</code>\u51B3\u5B9A\u662F\u5426\u91CD\u65B0\u8BA1\u7B97\u66F4\u65B0\u7F13\u5B58\u7684\u503C\u3002</p>`,16),c=[o];function l(r,u,i,k,d,b){return a(),s("div",null,c)}var g=n(t,[["render",l]]);export{f as __pageData,g as default};
